{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_divider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_underlying",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "stake",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stakeSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minm",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxm",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "tilt",
              "type": "uint64"
            },
            {
              "internalType": "uint48",
              "name": "level",
              "type": "uint48"
            },
            {
              "internalType": "uint16",
              "name": "mode",
              "type": "uint16"
            }
          ],
          "internalType": "struct BaseAdapter.AdapterParams",
          "name": "_adapterParams",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FlashCallbackFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyPeriphery",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenNotSupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "trusted",
          "type": "bool"
        }
      ],
      "name": "UserTrustUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CALLBACK_SUCCESS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adapterParams",
      "outputs": [
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stake",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stakeSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minm",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxm",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "tilt",
          "type": "uint64"
        },
        {
          "internalType": "uint48",
          "name": "level",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "mode",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "divider",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "flashFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC3156FlashBorrower",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaturityBounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakeAndTarget",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ifee",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isTrusted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "level",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "maxFlashLoan",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mode",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "notify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "onRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openSponsorWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scaleStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_scale",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "trusted",
          "type": "bool"
        }
      ],
      "name": "setIsTrusted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_scale",
          "type": "uint256"
        }
      ],
      "name": "setScale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tilt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tBal",
          "type": "uint256"
        }
      ],
      "name": "unwrapTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "uBal",
          "type": "uint256"
        }
      ],
      "name": "wrapUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "644:2236:90:-:0;;;735:6;703:38;;771:1;747:25;;779:235;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2736:18:32;;;;;;;2764:16;;;;;;;2790:24;;;;;;;966:9:90;2824:12:32;;;;2846:30;;:13;:30;;;;;-1:-1:-1;;;;;;2846:30:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2846:30:32;-1:-1:-1;;;;2846:30:32;;;;;;-1:-1:-1;;;;;;2846:30:32;;;-1:-1:-1;;;;;2846:30:32;;;;;;;;;;;;;;;;;;;2918:21;;-1:-1:-1;;;2918:21:32;;;;999:10:90;;934:8;;944:7;;953:11;;977:14;;2764:16:32;;2918:19;;:21;;;;2846:13;;2918:21;;;;;;2764:16;2918:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2918:21:32;;;;;;;;;;;;:::i;:::-;2901:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;2887:4;:66;;;;;;;;;;;;:::i;:::-;;3002:7;-1:-1:-1;;;;;2996:21:32;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2996:23:32;;;;;;;;;;;;:::i;:::-;2979:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;2963:6;:70;;;;;;;;;;;;:::i;:::-;;3044:54;3071:7;;-1:-1:-1;;3050:7:32;-1:-1:-1;;;;;3044:26:32;;;;;;;:54;;;;;:::i;:::-;3108:67;3148:7;;-1:-1:-1;;3114:14:32;:20;;;-1:-1:-1;;;;;3108:39:32;;;;;;;:67;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;443:22:52;;;;;;:9;:22;;;;;;;;;:29;;-1:-1:-1;;443:29:52;468:4;443:29;;;;;;488:35;;4389:41:91;;;443:22:52;;-1:-1:-1;488:35:52;;4362:18:91;488:35:52;;;;;;;400:130;779:235:90;;;;644:2236;;4032:1408:62;4143:12;4295:4;4289:11;-1:-1:-1;;;4418:1:62;4411:77;4511:2;4508:1;4501:13;4567:6;4563:2;4556:18;5235:2;5232:1;5228:2;5225:1;5222;5215:5;5208;5203:35;4890:16;4883:24;4877:2;4859:16;4856:24;4852:1;4848;4842:8;4839:15;4835:46;4832:76;4632:620;4621:631;;5279:1;5273:4;5266:15;5341:10;5335:4;5328:24;;5407:7;5399:34;;;;-1:-1:-1;;;5399:34:62;;4643:2:91;5399:34:62;;;4625:21:91;4682:2;4662:18;;;4655:30;-1:-1:-1;;;4701:18:91;;;4694:44;4755:18;;5399:34:62;;;;;;;;4133:1307;4032:1408;;;:::o;644:2236:90:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;644:2236:90;;;-1:-1:-1;644:2236:90;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:91;93:13;;-1:-1:-1;;;;;135:31:91;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;395:2;389:9;437:6;425:19;;-1:-1:-1;;;;;459:34:91;;495:22;;;456:62;453:88;;;521:18;;:::i;:::-;557:2;550:22;328:250;:::o;583:171::-;661:13;;714:14;703:26;;693:37;;683:65;;744:1;741;734:12;759:163;837:13;;890:6;879:18;;869:29;;859:57;;912:1;909;902:12;927:1263;1056:6;1064;1072;1080;1124:9;1115:7;1111:23;1154:3;1150:2;1146:12;1143:32;;;1171:1;1168;1161:12;1143:32;1194:40;1224:9;1194:40;:::i;:::-;1184:50;;1253:49;1298:2;1287:9;1283:18;1253:49;:::i;:::-;1243:59;;1321:49;1366:2;1355:9;1351:18;1321:49;:::i;:::-;1311:59;;1389:6;1429:2;1423;1419:7;1415:2;1411:16;1407:25;1404:45;;;1445:1;1442;1435:12;1404:45;1471:17;;:::i;:::-;1458:30;;1511:49;1556:2;1545:9;1541:18;1511:49;:::i;:::-;1504:5;1497:64;1593:50;1638:3;1627:9;1623:19;1593:50;:::i;:::-;1588:2;1577:14;;1570:74;1697:3;1682:19;;1676:26;1671:2;1660:14;;1653:50;1756:3;1741:19;;1735:26;-1:-1:-1;1719:14:91;;1712:50;1816:3;1801:19;;1795:26;1789:3;1778:15;;1771:51;1852:18;;1846:25;-1:-1:-1;;;;;1902:32:91;;1890:45;;1880:73;;1949:1;1946;1939:12;1880:73;1980:3;1969:15;;1962:32;2027:49;2071:3;2056:19;;2027:49;:::i;:::-;2021:3;2014:5;2010:15;2003:74;2110:49;2154:3;2143:9;2139:19;2110:49;:::i;:::-;2104:3;2093:15;;2086:74;927:1263;;;;-1:-1:-1;927:1263:91;;-1:-1:-1;;927:1263:91:o;2195:258::-;2267:1;2277:113;2291:6;2288:1;2285:13;2277:113;;;2367:11;;;2361:18;2348:11;;;2341:39;2313:2;2306:10;2277:113;;;2408:6;2405:1;2402:13;2399:48;;;-1:-1:-1;;2443:1:91;2425:16;;2418:27;2195:258::o;2458:884::-;2538:6;2591:2;2579:9;2570:7;2566:23;2562:32;2559:52;;;2607:1;2604;2597:12;2559:52;2634:16;;-1:-1:-1;;;;;2699:14:91;;;2696:34;;;2726:1;2723;2716:12;2696:34;2764:6;2753:9;2749:22;2739:32;;2809:7;2802:4;2798:2;2794:13;2790:27;2780:55;;2831:1;2828;2821:12;2780:55;2860:2;2854:9;2882:2;2878;2875:10;2872:36;;;2888:18;;:::i;:::-;2963:2;2957:9;2931:2;3017:13;;-1:-1:-1;;3013:22:91;;;3037:2;3009:31;3005:40;2993:53;;;3061:18;;;3081:22;;;3058:46;3055:72;;;3107:18;;:::i;:::-;3147:10;3143:2;3136:22;3182:2;3174:6;3167:18;3222:7;3217:2;3212;3208;3204:11;3200:20;3197:33;3194:53;;;3243:1;3240;3233:12;3194:53;3256:55;3308:2;3303;3295:6;3291:15;3286:2;3282;3278:11;3256:55;:::i;:::-;3330:6;2458:884;-1:-1:-1;;;;;;;2458:884:91:o;3347:446::-;3579:3;3617:6;3611:13;3633:53;3679:6;3674:3;3667:4;3659:6;3655:17;3633:53;:::i;:::-;-1:-1:-1;;;3708:16:91;;3733:25;;;-1:-1:-1;3785:1:91;3774:13;;3347:446;-1:-1:-1;3347:446:91:o;3798:::-;4030:3;4068:6;4062:13;4084:53;4130:6;4125:3;4118:4;4110:6;4106:17;4084:53;:::i;:::-;-1:-1:-1;;;4159:16:91;;4184:25;;;-1:-1:-1;4236:1:91;4225:13;;3798:446;-1:-1:-1;3798:446:91:o;4784:380::-;4863:1;4859:12;;;;4906;;;4927:61;;4981:4;4973:6;4969:17;4959:27;;4927:61;5034:2;5026:6;5023:14;5003:18;5000:38;4997:161;;5080:10;5075:3;5071:20;5068:1;5061:31;5115:4;5112:1;5105:15;5143:4;5140:1;5133:15;4997:161;;4784:380;;;:::o;:::-;644:2236:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101b95760003560e01c80635cffe9de116100f957806396d6487911610097578063c39a3b2911610071578063c39a3b2914610541578063d4b8399214610553578063d9d98ce41461057a578063f51e181a1461058d57600080fd5b806396d64879146104c3578063b484972a146104e6578063b8c15a9f146104f957600080fd5b80636f307dc3116100d35780636f307dc3146104515780636fd5ae15146104785780638237e5381461049457806395d89b41146104bb57600080fd5b80635cffe9de146103fe578063613255ab1461042157806364c56e3c1461043457600080fd5b8063295a5212116101665780633edc3519116101405780633edc3519146103b7578063468f02d2146103ca5780634aae9fed146103d857806351c39ea1146103eb57600080fd5b8063295a5212146103455780632c5786b814610363578063378efa371461036b57600080fd5b806314282f581161019757806314282f58146102c857806322677849146102dc57806327b327d0146102ee57600080fd5b806306fdde03146101be578063083118d5146101dc5780631393916a146102b3575b600080fd5b6101c6610596565b6040516101d39190611454565b60405180910390f35b60005460015460025460035460045460055461024a9573ffffffffffffffffffffffffffffffffffffffff90811695169392919067ffffffffffffffff81169068010000000000000000810465ffffffffffff16906e010000000000000000000000000000900461ffff1688565b6040805173ffffffffffffffffffffffffffffffffffffffff998a168152989097166020890152958701949094526060860192909252608085015267ffffffffffffffff1660a084015265ffffffffffff1660c083015261ffff1660e0820152610100016101d3565b6102c66102c13660046114fa565b610624565b005b6102c66102d6366004611533565b50505050565b6009545b6040519081526020016101d3565b6001546002546040805173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116825290931660208401528201526060016101d3565b6005546e010000000000000000000000000000900461ffff166102e0565b6102c661072c565b6103927f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d3565b6102c66103c5366004611565565b600955565b670de0b6b3a76400006102e0565b6102e06103e6366004611565565b61083d565b6102e06103f9366004611565565b610b32565b61041161040c36600461157e565b610df4565b60405190151581526020016101d3565b6102e061042f36600461161d565b611096565b61043c61112d565b604080519283526020830191909152016101d3565b6103927f000000000000000000000000000000000000000000000000000000000000000081565b60055468010000000000000000900465ffffffffffff166102e0565b6102e07f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b6101c661116f565b6104116104d136600461161d565b60086020526000908152604090205460ff1681565b6102c66104f4366004611641565b505050565b6105207f000000000000000000000000000000000000000000000000000000000000000081565b6040516fffffffffffffffffffffffffffffffff90911681526020016101d3565b60055467ffffffffffffffff166102e0565b6103927f000000000000000000000000000000000000000000000000000000000000000081565b6102e0610588366004611683565b61117c565b6102e060095481565b600680546105a3906116af565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf906116af565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b505050505081565b3360009081526008602052604090205460ff166106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e54525553544544000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526008602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527fe95aec380cae16330d146d5499ef7db6f3657e477104a733e771bc09e500d986910160405180910390a25050565b3360009081526008602052604090205460ff166107a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e5452555354454400000000000000000000000000000000000000000000006044820152606401610699565b6002600a81905560015490546040517fdfd4718f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152339063dfd4718f90604401600060405180830381600087803b15801561081e57600080fd5b505af1158015610832573d6000803e3d6000fd5b50506001600a555050565b6000807f0000000000000000000000000000000000000000000000000000000000000000905060007f0000000000000000000000000000000000000000000000000000000000000000905060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f99190611702565b60ff16905060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190611702565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810188905260ff91909116915073ffffffffffffffffffffffffffffffffffffffff8416906323b872dd906064016020604051808303816000875af11580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611725565b50818110610a6057600a610a288383611771565b610a3291906118a8565b600954610a4788670de0b6b3a76400006118b7565b610a519190611923565b610a5b9190611923565b610a9f565b600a610a6c8284611771565b610a7691906118a8565b600954610a8b88670de0b6b3a76400006118b7565b610a959190611923565b610a9f91906118b7565b6040517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810182905290955073ffffffffffffffffffffffffffffffffffffffff8516906340c10f19906044015b600060405180830381600087803b158015610b1157600080fd5b505af1158015610b25573d6000803e3d6000fd5b5050505050505050919050565b6000807f0000000000000000000000000000000000000000000000000000000000000000905060007f0000000000000000000000000000000000000000000000000000000000000000905060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bee9190611702565b60ff16905060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c649190611702565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810188905260ff91909116915073ffffffffffffffffffffffffffffffffffffffff8516906323b872dd906064016020604051808303816000875af1158015610ce5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d099190611725565b50818110610d5757600a610d1d8383611771565b610d2791906118a8565b670de0b6b3a764000060095488610d3e91906118b7565b610d489190611923565b610d5291906118b7565b610d98565b600a610d638284611771565b610d6d91906118a8565b670de0b6b3a764000060095488610d8491906118b7565b610d8e9190611923565b610d989190611923565b6040517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810182905290955073ffffffffffffffffffffffffffffffffffffffff8416906340c10f1990604401610af7565b60003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166377aace1a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9c9190611937565b73ffffffffffffffffffffffffffffffffffffffff1614610ee9576040517ffb02114900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f2a73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001687866112cb565b6040517f23e30c8b00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8816906323e30c8b90610fa99033907f0000000000000000000000000000000000000000000000000000000000000000908a9087908b908b90600401611954565b6020604051808303816000875af1158015610fc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fec91906119da565b90507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98114611047576040517f207df21c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61108973ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001688308861138a565b5060019695505050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611103573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112791906119da565b92915050565b600080600a5460021461114257600080611157565b6000611157600267ffffffffffffffff6119f3565b60ff9091169367ffffffffffffffff90911692509050565b600780546105a3906116af565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611203576040517f3dd1b30500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600092915050565b60006040517f095ea7b3000000000000000000000000000000000000000000000000000000006000528360045282602452602060006044600080895af13d15601f3d11600160005114161716915060006060528060405250806102d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610699565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000006000528360045282602452602060006044600080895af13d15601f3d11600160005114161716915060006060528060405250806102d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610699565b60006040517f23b872dd000000000000000000000000000000000000000000000000000000006000528460045283602452826044526020600060646000808a5af13d15601f3d116001600051141617169150600060605280604052508061144d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610699565b5050505050565b600060208083528351808285015260005b8181101561148157858101830151858201604001528201611465565b81811115611493576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146114e957600080fd5b50565b80151581146114e957600080fd5b6000806040838503121561150d57600080fd5b8235611518816114c7565b91506020830135611528816114ec565b809150509250929050565b6000806000806080858703121561154957600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561157757600080fd5b5035919050565b60008060008060006080868803121561159657600080fd5b85356115a1816114c7565b945060208601356115b1816114c7565b935060408601359250606086013567ffffffffffffffff808211156115d557600080fd5b818801915088601f8301126115e957600080fd5b8135818111156115f857600080fd5b89602082850101111561160a57600080fd5b9699959850939650602001949392505050565b60006020828403121561162f57600080fd5b813561163a816114c7565b9392505050565b60008060006060848603121561165657600080fd5b8335611661816114c7565b9250602084013591506040840135611678816114ec565b809150509250925092565b6000806040838503121561169657600080fd5b82356116a1816114c7565b946020939093013593505050565b600181811c908216806116c357607f821691505b6020821081036116fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561171457600080fd5b815160ff8116811461163a57600080fd5b60006020828403121561173757600080fd5b815161163a816114ec565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561178357611783611742565b500390565b600181815b808511156117e157817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156117c7576117c7611742565b808516156117d457918102915b93841c939080029061178d565b509250929050565b6000826117f857506001611127565b8161180557506000611127565b816001811461181b576002811461182557611841565b6001915050611127565b60ff84111561183657611836611742565b50506001821b611127565b5060208310610133831016604e8410600b8410161715611864575081810a611127565b61186e8383611788565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156118a0576118a0611742565b029392505050565b600061163a60ff8416836117e9565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118ef576118ef611742565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611932576119326118f4565b500490565b60006020828403121561194957600080fd5b815161163a816114c7565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015284606083015260a060808301528260a0830152828460c0840137600060c0848401015260c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501168301019050979650505050505050565b6000602082840312156119ec57600080fd5b5051919050565b600067ffffffffffffffff80841680611a0e57611a0e6118f4565b9216919091049291505056fea26469706673582212203cf6cfac70455451947441c61410c8d9393f14a011969f6e4edbc78e0f8886fc64736f6c634300080d0033",
    "sourceMap": "644:2236:90:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2508:18:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1289:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:42:91;1091:15;;;1073:34;;1143:15;;;;1138:2;1123:18;;1116:43;1175:18;;;1168:34;;;;1233:2;1218:18;;1211:34;;;;1276:3;1261:19;;1254:35;1338:18;1326:31;1320:3;1305:19;;1298:60;1407:14;1395:27;1389:3;1374:19;;1367:56;1472:6;1460:19;1454:3;1439:19;;1432:48;999:3;984:19;1289:34:32;675:811:91;536:168:52;;;;;;:::i;:::-;;:::i;:::-;;6388:180:32;;;;;;:::i;:::-;;;;;;1020:110:90;1118:5;;1020:110;;;2696:25:91;;;2684:2;2669:18;1020:110:90;2550:177:91;6780:231:32;6959:19;;6980:23;;6780:231;;;6959:19;6951:6;3013:15:91;;2995:34;;6959:19:32;;;3060:2:91;3045:18;;3038:43;3097:18;;3090:34;2922:2;2907:18;6780:231:32;2732:398:91;7017:90:32;7082:18;;;;;;;7017:90;;2523:200:90;;;:::i;993:32:32:-;;;;;;;;3311:42:91;3299:55;;;3281:74;;3269:2;3254:18;993:32:32;3135:226:91;2443:74:90;;;;;;:::i;:::-;2496:5;:14;2443:74;2330:107;2426:4;2330:107;;1136:586;;;;;;:::i;:::-;;:::i;1728:596::-;;;;;;:::i;:::-;;:::i;3593:613:32:-;;;;;;:::i;:::-;;:::i;:::-;;;4688:14:91;;4681:22;4663:41;;4651:2;4636:18;3593:613:32;4523:187:91;5922:139:32;;;;;;:::i;:::-;;:::i;2729:149:90:-;;;:::i;:::-;;;;5141:25:91;;;5197:2;5182:18;;5175:34;;;;5114:18;2729:149:90;4967:248:91;1151:35:32;;;;;7209:92;7275:19;;;;;;;7209:92;;804:88;;847:45;804:88;;2533:20;;;:::i;352:41:52:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6188:139:32;;;;;;:::i;:::-;;;;;1222:29;;;;;;;;6033:34:91;6021:47;;;6003:66;;5991:2;5976:18;1222:29:32;5857:218:91;7113:90:32;7178:18;;;;7113:90;;1071:31;;;;;5753:163;;;;;;:::i;:::-;;:::i;703:38:90:-;;;;;;2508:18:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;536:168:52:-;763:10;753:21;;;;:9;:21;;;;;;;;745:43;;;;;;;7044:2:91;745:43:52;;;7026:21:91;7083:1;7063:18;;;7056:29;7121:11;7101:18;;;7094:39;7150:18;;745:43:52;;;;;;;;;625:15:::1;::::0;::::1;;::::0;;;:9:::1;:15;::::0;;;;;;;;:25;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;666:31;;4663:41:91;;;666:31:52::1;::::0;4636:18:91;666:31:52::1;;;;;;;536:168:::0;;:::o;2523:200:90:-;763:10:52;753:21;;;;:9;:21;;;;;;;;745:43;;;;;;;7044:2:91;745:43:52;;;7026:21:91;7083:1;7063:18;;;7056:29;7121:11;7101:18;;;7094:39;7150:18;;745:43:52;6842:332:91;745:43:52;2601:1:90::1;2594:4;:8:::0;;;2653:19:::1;::::0;2674:23;;2612:86:::1;::::0;;;;:40:::1;2653:19:::0;;::::1;2612:86;::::0;::::1;7353:74:91::0;7443:18;;;7436:34;2619:10:90::1;::::0;2612:40:::1;::::0;7326:18:91;;2612:86:90::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2715:1:90::1;2708:4;:8:::0;-1:-1:-1;;2523:200:90:o;1136:586::-;1209:17;1238:16;1267:6;1238:36;;1284:20;1317:10;1284:44;;1339:17;1359:6;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1339:37;;;;1386:17;1406:10;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1438:56;;;;;1462:10;1438:56;;;2995:34:91;1482:4:90;3045:18:91;;;3038:43;3097:18;;;3090:34;;;1386:41:90;;;;;;-1:-1:-1;1438:23:90;;;;;;2907:18:91;;1438:56:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1528:9;1516;:21;:154;;1668:2;1642:21;1654:9;1642;:21;:::i;:::-;1641:29;;;;:::i;:::-;1633:5;;1619:11;:4;1626;1619:11;:::i;:::-;:19;;;;:::i;:::-;:51;;;;:::i;:::-;1516:154;;;1602:2;1576:21;1588:9;1576;:21;:::i;:::-;1575:29;;;;:::i;:::-;1567:5;;1553:11;:4;1560;1553:11;:::i;:::-;:19;;;;:::i;:::-;:51;;;;:::i;:::-;1681:34;;;;;1693:10;1681:34;;;7353:74:91;7443:18;;;7436:34;;;1504:166:90;;-1:-1:-1;1681:11:90;;;;;;7326:18:91;;1681:34:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1228:494;;;;1136:586;;;:::o;1728:596::-;1799:17;1828:16;1857:6;1828:36;;1874:20;1907:10;1874:44;;1929:17;1949:6;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1929:37;;;;1976:17;1996:10;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2028:52;;;;;2048:10;2028:52;;;2995:34:91;2068:4:90;3045:18:91;;;3038:43;3097:18;;;3090:34;;;1976:41:90;;;;;;-1:-1:-1;2028:19:90;;;;;;2907:18:91;;2028:52:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2114:9;2102;:21;:154;;2254:2;2228:21;2240:9;2228;:21;:::i;:::-;2227:29;;;;:::i;:::-;2220:4;2212:5;;2205:4;:12;;;;:::i;:::-;:19;;;;:::i;:::-;:51;;;;:::i;:::-;2102:154;;;2188:2;2162:21;2174:9;2162;:21;:::i;:::-;2161:29;;;;:::i;:::-;2154:4;2146:5;;2139:4;:12;;;;:::i;:::-;:19;;;;:::i;:::-;:51;;;;:::i;:::-;2279:38;;;;;2295:10;2279:38;;;7353:74:91;7443:18;;;7436:34;;;2090:166:90;;-1:-1:-1;2279:15:90;;;;;;7326:18:91;;2279:38:90;7179:297:91;3593:613:32;3756:4;3808:10;3776:42;;3784:7;3776:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;3772:77;;3827:22;;;;;;;;;;;;;;3772:77;3859:53;:26;3865:6;3859:26;3894:8;3905:6;3859:26;:53::i;:::-;3939:80;;;;;3922:14;;3939:43;;;;;;:80;;3983:10;;3995:6;;4003;;3922:14;;4014:4;;;;3939:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3922:97;;847:45;4033:6;:26;4029:67;;4068:28;;;;;;;;;;;;;;4029:67;4106:72;:30;4112:6;4106:30;4145:8;4164:4;4171:6;4106:30;:72::i;:::-;-1:-1:-1;4195:4:32;;3593:613;-1:-1:-1;;;;;;3593:613:32:o;5922:139::-;6017:37;;;;;6048:4;6017:37;;;3281:74:91;5991:7:32;;6017:22;;;;;;3254:18:91;;6017:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6010:44;5922:139;-1:-1:-1;;5922:139:32:o;2729:149:90:-;2790:7;2799;2825:4;;2833:1;2825:9;:46;;2866:1;2869;2825:46;;;2838:1;2841:20;2860:1;2841:16;:20;:::i;:::-;2818:53;;;;;;;;;;-1:-1:-1;2729:149:90;-1:-1:-1;2729:149:90:o;2533:20:32:-;;;;;;;:::i;5753:163::-;5818:7;5850:6;5841:15;;:5;:15;;;5837:54;;5865:26;;;;;;;;;;;;;;5837:54;-1:-1:-1;5908:1:32;5753:163;;;;:::o;4032:1408:62:-;4143:12;4295:4;4289:11;4421:66;4418:1;4411:77;4511:2;4508:1;4501:13;4567:6;4563:2;4556:18;5235:2;5232:1;5228:2;5225:1;5222;5215:5;5208;5203:35;4890:16;4883:24;4877:2;4859:16;4856:24;4852:1;4848;4842:8;4839:15;4835:46;4832:76;4632:620;4621:631;;5279:1;5273:4;5266:15;5341:10;5335:4;5328:24;;5407:7;5399:34;;;;;;;12247:2:91;5399:34:62;;;12229:21:91;12286:2;12266:18;;;12259:30;12325:16;12305:18;;;12298:44;12359:18;;5399:34:62;12045:338:91;2616:1410:62;2728:12;2880:4;2874:11;3006:66;3003:1;2996:77;3096:2;3093:1;3086:13;3152:6;3148:2;3141:18;3820:2;3817:1;3813:2;3810:1;3807;3800:5;3793;3788:35;3475:16;3468:24;3462:2;3444:16;3441:24;3437:1;3433;3427:8;3424:15;3420:46;3417:76;3217:620;3206:631;;3864:1;3858:4;3851:15;3926:10;3920:4;3913:24;;3992:7;3984:35;;;;;;;12590:2:91;3984:35:62;;;12572:21:91;12629:2;12609:18;;;12602:30;12668:17;12648:18;;;12641:45;12703:18;;3984:35:62;12388:339:91;1107:1503:62;1245:12;1397:4;1391:11;1523:66;1520:1;1513:77;1613:4;1610:1;1603:15;1673:2;1669;1662:14;1729:6;1725:2;1718:18;2399:2;2396:1;2391:3;2388:1;2385;2378:5;2371;2366:36;2052:16;2045:24;2039:2;2021:16;2018:24;2014:1;2010;2004:8;2001:15;1997:46;1994:76;1794:622;1783:633;;2443:1;2437:4;2430:15;2505:10;2499:4;2492:24;;2571:7;2563:40;;;;;;;12934:2:91;2563:40:62;;;12916:21:91;12973:2;12953:18;;;12946:30;13012:22;12992:18;;;12985:50;13052:18;;2563:40:62;12732:344:91;2563:40:62;1235:1375;1107:1503;;;;:::o;14:656:91:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;586:2:91;574:15;591:66;570:88;555:104;;;;661:2;551:113;;14:656;-1:-1:-1;;;14:656:91:o;1491:154::-;1577:42;1570:5;1566:54;1559:5;1556:65;1546:93;;1635:1;1632;1625:12;1546:93;1491:154;:::o;1650:118::-;1736:5;1729:13;1722:21;1715:5;1712:32;1702:60;;1758:1;1755;1748:12;1773:382;1838:6;1846;1899:2;1887:9;1878:7;1874:23;1870:32;1867:52;;;1915:1;1912;1905:12;1867:52;1954:9;1941:23;1973:31;1998:5;1973:31;:::i;:::-;2023:5;-1:-1:-1;2080:2:91;2065:18;;2052:32;2093:30;2052:32;2093:30;:::i;:::-;2142:7;2132:17;;;1773:382;;;;;:::o;2160:385::-;2246:6;2254;2262;2270;2323:3;2311:9;2302:7;2298:23;2294:33;2291:53;;;2340:1;2337;2330:12;2291:53;-1:-1:-1;;2363:23:91;;;2433:2;2418:18;;2405:32;;-1:-1:-1;2484:2:91;2469:18;;2456:32;;2535:2;2520:18;2507:32;;-1:-1:-1;2160:385:91;-1:-1:-1;2160:385:91:o;3366:180::-;3425:6;3478:2;3466:9;3457:7;3453:23;3449:32;3446:52;;;3494:1;3491;3484:12;3446:52;-1:-1:-1;3517:23:91;;3366:180;-1:-1:-1;3366:180:91:o;3551:967::-;3679:6;3687;3695;3703;3711;3764:3;3752:9;3743:7;3739:23;3735:33;3732:53;;;3781:1;3778;3771:12;3732:53;3820:9;3807:23;3839:31;3864:5;3839:31;:::i;:::-;3889:5;-1:-1:-1;3946:2:91;3931:18;;3918:32;3959:33;3918:32;3959:33;:::i;:::-;4011:7;-1:-1:-1;4065:2:91;4050:18;;4037:32;;-1:-1:-1;4120:2:91;4105:18;;4092:32;4143:18;4173:14;;;4170:34;;;4200:1;4197;4190:12;4170:34;4238:6;4227:9;4223:22;4213:32;;4283:7;4276:4;4272:2;4268:13;4264:27;4254:55;;4305:1;4302;4295:12;4254:55;4345:2;4332:16;4371:2;4363:6;4360:14;4357:34;;;4387:1;4384;4377:12;4357:34;4432:7;4427:2;4418:6;4414:2;4410:15;4406:24;4403:37;4400:57;;;4453:1;4450;4443:12;4400:57;3551:967;;;;-1:-1:-1;3551:967:91;;-1:-1:-1;4484:2:91;4476:11;;4506:6;3551:967;-1:-1:-1;;;3551:967:91:o;4715:247::-;4774:6;4827:2;4815:9;4806:7;4802:23;4798:32;4795:52;;;4843:1;4840;4833:12;4795:52;4882:9;4869:23;4901:31;4926:5;4901:31;:::i;:::-;4951:5;4715:247;-1:-1:-1;;;4715:247:91:o;5402:450::-;5476:6;5484;5492;5545:2;5533:9;5524:7;5520:23;5516:32;5513:52;;;5561:1;5558;5551:12;5513:52;5600:9;5587:23;5619:31;5644:5;5619:31;:::i;:::-;5669:5;-1:-1:-1;5721:2:91;5706:18;;5693:32;;-1:-1:-1;5777:2:91;5762:18;;5749:32;5790:30;5749:32;5790:30;:::i;:::-;5839:7;5829:17;;;5402:450;;;;;:::o;6080:315::-;6148:6;6156;6209:2;6197:9;6188:7;6184:23;6180:32;6177:52;;;6225:1;6222;6215:12;6177:52;6264:9;6251:23;6283:31;6308:5;6283:31;:::i;:::-;6333:5;6385:2;6370:18;;;;6357:32;;-1:-1:-1;;;6080:315:91:o;6400:437::-;6479:1;6475:12;;;;6522;;;6543:61;;6597:4;6589:6;6585:17;6575:27;;6543:61;6650:2;6642:6;6639:14;6619:18;6616:38;6613:218;;6687:77;6684:1;6677:88;6788:4;6785:1;6778:15;6816:4;6813:1;6806:15;6613:218;;6400:437;;;:::o;7481:273::-;7549:6;7602:2;7590:9;7581:7;7577:23;7573:32;7570:52;;;7618:1;7615;7608:12;7570:52;7650:9;7644:16;7700:4;7693:5;7689:16;7682:5;7679:27;7669:55;;7720:1;7717;7710:12;7759:245;7826:6;7879:2;7867:9;7858:7;7854:23;7850:32;7847:52;;;7895:1;7892;7885:12;7847:52;7927:9;7921:16;7946:28;7968:5;7946:28;:::i;8009:184::-;8061:77;8058:1;8051:88;8158:4;8155:1;8148:15;8182:4;8179:1;8172:15;8198:125;8238:4;8266:1;8263;8260:8;8257:34;;;8271:18;;:::i;:::-;-1:-1:-1;8308:9:91;;8198:125::o;8328:482::-;8417:1;8460:5;8417:1;8474:330;8495:7;8485:8;8482:21;8474:330;;;8614:4;8546:66;8542:77;8536:4;8533:87;8530:113;;;8623:18;;:::i;:::-;8673:7;8663:8;8659:22;8656:55;;;8693:16;;;;8656:55;8772:22;;;;8732:15;;;;8474:330;;;8478:3;8328:482;;;;;:::o;8815:866::-;8864:5;8894:8;8884:80;;-1:-1:-1;8935:1:91;8949:5;;8884:80;8983:4;8973:76;;-1:-1:-1;9020:1:91;9034:5;;8973:76;9065:4;9083:1;9078:59;;;;9151:1;9146:130;;;;9058:218;;9078:59;9108:1;9099:10;;9122:5;;;9146:130;9183:3;9173:8;9170:17;9167:43;;;9190:18;;:::i;:::-;-1:-1:-1;;9246:1:91;9232:16;;9261:5;;9058:218;;9360:2;9350:8;9347:16;9341:3;9335:4;9332:13;9328:36;9322:2;9312:8;9309:16;9304:2;9298:4;9295:12;9291:35;9288:77;9285:159;;;-1:-1:-1;9397:19:91;;;9429:5;;9285:159;9476:34;9501:8;9495:4;9476:34;:::i;:::-;9606:6;9538:66;9534:79;9525:7;9522:92;9519:118;;;9617:18;;:::i;:::-;9655:20;;8815:866;-1:-1:-1;;;8815:866:91:o;9686:140::-;9744:5;9773:47;9814:4;9804:8;9800:19;9794:4;9773:47;:::i;9831:228::-;9871:7;9997:1;9929:66;9925:74;9922:1;9919:81;9914:1;9907:9;9900:17;9896:105;9893:131;;;10004:18;;:::i;:::-;-1:-1:-1;10044:9:91;;9831:228::o;10064:184::-;10116:77;10113:1;10106:88;10213:4;10210:1;10203:15;10237:4;10234:1;10227:15;10253:120;10293:1;10319;10309:35;;10324:18;;:::i;:::-;-1:-1:-1;10358:9:91;;10253:120::o;10378:251::-;10448:6;10501:2;10489:9;10480:7;10476:23;10472:32;10469:52;;;10517:1;10514;10507:12;10469:52;10549:9;10543:16;10568:31;10593:5;10568:31;:::i;10634:824::-;10874:4;10903:42;10984:2;10976:6;10972:15;10961:9;10954:34;11036:2;11028:6;11024:15;11019:2;11008:9;11004:18;10997:43;;11076:6;11071:2;11060:9;11056:18;11049:34;11119:6;11114:2;11103:9;11099:18;11092:34;11163:3;11157;11146:9;11142:19;11135:32;11204:6;11198:3;11187:9;11183:19;11176:35;11262:6;11254;11248:3;11237:9;11233:19;11220:49;11319:1;11313:3;11304:6;11293:9;11289:22;11285:32;11278:43;11448:3;11378:66;11373:2;11365:6;11361:15;11357:88;11346:9;11342:104;11338:114;11330:122;;10634:824;;;;;;;;;:::o;11463:184::-;11533:6;11586:2;11574:9;11565:7;11561:23;11557:32;11554:52;;;11602:1;11599;11592:12;11554:52;-1:-1:-1;11625:16:91;;11463:184;-1:-1:-1;11463:184:91:o;11841:199::-;11880:1;11906:18;11951:2;11948:1;11944:10;11973:3;11963:37;;11980:18;;:::i;:::-;12018:10;;12014:20;;;;;11841:199;-1:-1:-1;;11841:199:91:o",
    "linkReferences": {},
    "immutableReferences": {
      "20960": [
        {
          "start": 880,
          "length": 32
        },
        {
          "start": 3599,
          "length": 32
        }
      ],
      "20963": [
        {
          "start": 783,
          "length": 32
        },
        {
          "start": 1368,
          "length": 32
        },
        {
          "start": 2114,
          "length": 32
        },
        {
          "start": 2871,
          "length": 32
        },
        {
          "start": 3843,
          "length": 32
        },
        {
          "start": 3961,
          "length": 32
        },
        {
          "start": 4193,
          "length": 32
        },
        {
          "start": 4480,
          "length": 32
        }
      ],
      "20966": [
        {
          "start": 1110,
          "length": 32
        },
        {
          "start": 2151,
          "length": 32
        },
        {
          "start": 2908,
          "length": 32
        }
      ],
      "20969": [
        {
          "start": 1278,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CALLBACK_SUCCESS()": "8237e538",
    "adapterParams()": "083118d5",
    "divider()": "378efa37",
    "flashFee(address,uint256)": "d9d98ce4",
    "flashLoan(address,address,uint256,bytes)": "5cffe9de",
    "getMaturityBounds()": "64c56e3c",
    "getStakeAndTarget()": "27b327d0",
    "getUnderlyingPrice()": "468f02d2",
    "ifee()": "b8c15a9f",
    "isTrusted(address)": "96d64879",
    "level()": "6fd5ae15",
    "maxFlashLoan(address)": "613255ab",
    "mode()": "295a5212",
    "name()": "06fdde03",
    "notify(address,uint256,bool)": "b484972a",
    "onRedeem(uint256,uint256,uint256,uint256)": "14282f58",
    "openSponsorWindow()": "2c5786b8",
    "scale()": "f51e181a",
    "scaleStored()": "22677849",
    "setIsTrusted(address,bool)": "1393916a",
    "setScale(uint256)": "3edc3519",
    "symbol()": "95d89b41",
    "target()": "d4b83992",
    "tilt()": "c39a3b29",
    "underlying()": "6f307dc3",
    "unwrapTarget(uint256)": "51c39ea1",
    "wrapUnderlying(uint256)": "4aae9fed"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_divider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_underlying\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxm\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"tilt\",\"type\":\"uint64\"},{\"internalType\":\"uint48\",\"name\":\"level\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"mode\",\"type\":\"uint16\"}],\"internalType\":\"struct BaseAdapter.AdapterParams\",\"name\":\"_adapterParams\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FlashCallbackFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPeriphery\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotSupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"UserTrustUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adapterParams\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxm\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"tilt\",\"type\":\"uint64\"},{\"internalType\":\"uint48\",\"name\":\"level\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"mode\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"divider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaturityBounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeAndTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ifee\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTrusted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"notify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"onRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openSponsorWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaleStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_scale\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"setIsTrusted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_scale\",\"type\":\"uint256\"}],\"name\":\"setScale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tilt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tBal\",\"type\":\"uint256\"}],\"name\":\"unwrapTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"uBal\",\"type\":\"uint256\"}],\"name\":\"wrapUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"flashLoan(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"The amount of target lent.\",\"data\":\"(encoded adapter address, maturity and YT amount the use has sent in)\",\"receiver\":\"The contract receiving target, needs to implement the `onFlashLoan(address user, address adapter, uint256 maturity, uint256 amount)` interface.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lent.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}},\"scaleStored()\":{\"details\":\"For situations where you need scale from a view function\"}},\"stateVariables\":{\"scale\":{\"details\":\"For some Targets, such as cTokens, this is simply the exchange rate, or `supply cToken / supply underlying`For other Targets, such as AMM LP shares, specialized logic will be requiredThis function _must_ return a WAD number representing the current exchange rate between the Target and the Underlying.\",\"return\":\"value WAD Scale value\",\"returns\":{\"_0\":\"value WAD Scale value\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"adapterParams()\":{\"notice\":\"adapter params\"},\"divider()\":{\"notice\":\"Sense core Divider address\"},\"flashLoan(address,address,uint256,bytes)\":{\"notice\":\"Loan `amount` target to `receiver`, and takes it back after the callback.\"},\"getUnderlyingPrice()\":{\"notice\":\"Returns the current price of the underlying in ETH terms\"},\"ifee()\":{\"notice\":\"Issuance fee\"},\"notify(address,uint256,bool)\":{\"notice\":\"Notification whenever the Divider adds or removes Target\"},\"onRedeem(uint256,uint256,uint256,uint256)\":{\"notice\":\"Hook called whenever a user redeems PT\"},\"scale()\":{\"notice\":\"Calculate and return this adapter's Scale value for the current timestamp. To be overriden by child contracts\"},\"scaleStored()\":{\"notice\":\"Cached scale value getter\"},\"target()\":{\"notice\":\"Target token to divide\"},\"underlying()\":{\"notice\":\"Underlying for the Target\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/utils/MockOwnedAdapter.sol\":\"MockOwnableAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@balancer-labs/=lib/sense-v1/node_modules/@balancer-labs/\",\":@balancer-labs/v2-pool-utils/=lib/space-v1/lib/balancer-v2-monorepo/pkg/pool-utils/\",\":@balancer-labs/v2-solidity-utils/=lib/space-v1/lib/balancer-v2-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v2-vault/=lib/space-v1/lib/balancer-v2-monorepo/pkg/vault/\",\":@openzeppelin/=lib/sense-v1/node_modules/@openzeppelin/\",\":@openzeppelin/contracts/=lib/sense-v1/node_modules/@openzeppelin/contracts/\",\":@rari-capital/=lib/sense-v1/node_modules/@rari-capital/\",\":@sense-finance/=lib/sense-v1/node_modules/@sense-finance/\",\":@sense-finance/v1-core/=lib/space-v1/lib/sense-v1/pkg/core/\",\":@sense-finance/v1-utils/=lib/space-v1/lib/sense-v1/pkg/utils/\",\":balancer-v2-monorepo/=lib/space-v1/lib/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=lib/sense-v1/node_modules/hardhat-deploy/\",\":hardhat/=lib/sense-v1/node_modules/hardhat/\",\":prettier-plugin-solidity/=lib/sense-v1/node_modules/prettier-plugin-solidity/\",\":sense-v1-core/=lib/sense-v1/pkg/core/src/\",\":sense-v1-utils/=lib/sense-v1/pkg/utils/src/\",\":sense-v1/=lib/sense-v1/pkg/core/src/\",\":solmate/=lib/solmate/src/\",\":space-v1/=lib/space-v1/src/\"]},\"sources\":{\"lib/sense-v1/node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/sense-v1/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/sense-v1/pkg/core/src/Divider.sol\":{\"keccak256\":\"0x26c550f6e5d169e4978b3f1d4a52c6ac057472cec74d95d8f95f8df93f7472bf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1961fe6eca22c421a4701df9b030929ed4a788da4aa544a6cdcc7a8d2bf5e0c7\",\"dweb:/ipfs/QmP3uTuNuVPqtWqS2MysCK1F576MBBFTZCdca8BiFV4v7t\"]},\"lib/sense-v1/pkg/core/src/adapters/abstract/BaseAdapter.sol\":{\"keccak256\":\"0xa4a27a2ac7c325c9181235588347fdc5d6241e9e6bf447cc83e27ff8dc1e54a0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://69503ff5078dfc8814415d00d41a35490a8da0d2be75319832afb0795f66d669\",\"dweb:/ipfs/QmRTFBTywMS2pNdYGyZQXkiZk7LD573D2jhu4Yh1BAESZH\"]},\"lib/sense-v1/pkg/core/src/adapters/abstract/IClaimer.sol\":{\"keccak256\":\"0x4ebf74198a08a1b88281820f65f91f44d04648079fda7de8d3b8a9a1aa7a5d64\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f3676511e7198a19811136b3afebe7a94a42c21f20ebb592db7712796a42425a\",\"dweb:/ipfs/QmQmHWa5kyLQUf3KDpBPtiXc1KS53RADDLZ5GfzmNJmfoo\"]},\"lib/sense-v1/pkg/core/src/adapters/abstract/extensions/Crop.sol\":{\"keccak256\":\"0x73725e08f53ef8a78c2639fde44d0554cb1a87c8e0707864e09909f1875bb592\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a95b1b867cd4ee4bfe2c5a18d57e4e149609fbdece6c902006b43cb63cf8e160\",\"dweb:/ipfs/QmaVEGnW2iqHfFN4rBAmDdcoGs4zF5vvVjNBJkBSeXYjjn\"]},\"lib/sense-v1/pkg/core/src/adapters/abstract/extensions/Crops.sol\":{\"keccak256\":\"0x2d1f2924fb736bcd6fd8f621afc25ee2e0f1d52d4073b116ce18fbb41d1c180b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88895991edce4bd05a195e1181c8a6257628a5b60c12cbf4768e4c61cad24404\",\"dweb:/ipfs/QmSDFR9JSTyNMPdEHGUCr7kmthctXLwnb2rb1qVQy2gef8\"]},\"lib/sense-v1/pkg/core/src/external/DateTime.sol\":{\"keccak256\":\"0x8437e029aee574dc861bde9293e8501d4c98e3e72b96e0a642731d24893c0053\",\"urls\":[\"bzz-raw://cdeb5611548b519cd1970fb6f2d23e9860699b4429d8c54f3bac3790ff70a85f\",\"dweb:/ipfs/QmTmmdVqCJc77AUNCCfFa5avCbK45nWp2PW5cAMchPiypr\"]},\"lib/sense-v1/pkg/core/src/external/FixedMath.sol\":{\"keccak256\":\"0x525bf5c2c917f4626a4048c0908b751d3cf3dbb1862df60561f33245e9ececd0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7645e28a04878990cf6b7547f442807e5245013fc6a387fe670ed8dff04e93c6\",\"dweb:/ipfs/QmSSbWM8vVvUM1kgFpcdAowYcr5jWcuD8s4YKMjPXCJndQ\"]},\"lib/sense-v1/pkg/core/src/external/flashloan/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0xa2007326dfc89668d1864d688373d7e1ee07fee48f605d4f6726224004bdc8e5\",\"urls\":[\"bzz-raw://d323f9f53322773266e9fc2fed02a49be168f2855d7bb888889eb2540680e6bb\",\"dweb:/ipfs/QmcFD7VCFeZvReYBo61ujnqDXMRpHbBhDxh47d49h6cmqT\"]},\"lib/sense-v1/pkg/core/src/external/flashloan/IERC3156FlashLender.sol\":{\"keccak256\":\"0xc91333a7ff49db20853c817de2c277a0559a1ee75eb1deeb7d2096a5d1022d61\",\"urls\":[\"bzz-raw://32d3759ce15ad86042edd65287092c4fff04de6e87e702976cd1e59161d334fd\",\"dweb:/ipfs/QmRfB8sPsDoASMknbKXw2RDNGhaA6wprubLxczT1BvZ9z8\"]},\"lib/sense-v1/pkg/core/src/tokens/Token.sol\":{\"keccak256\":\"0x18ac77734fd7449108f58409d10a4291131b095a4ae4fd604bcf5f10546c7fba\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b1fd2ca69cfe9d3cc9e72ed3d4594045bebeaa9da5fb0f2be6db70f4c852576b\",\"dweb:/ipfs/QmU2nLPH33rdsXiDUqz1YQWiksDEYSDhsBTSKCdjHaWzDz\"]},\"lib/sense-v1/pkg/core/src/tokens/YT.sol\":{\"keccak256\":\"0x3d6d073e63ea5e9832c571a1694e3048624639afff308d45097fa894bf0c9308\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3dd8f35290d2dc0057b09e79d10a5bbae2ad1cb2da3796ec755e6191dba81199\",\"dweb:/ipfs/Qmb4WHaBWe8jGddDXc7HcQRCcjF3uS9wndzh3afFQiZ5Tc\"]},\"lib/sense-v1/pkg/utils/src/Trust.sol\":{\"keccak256\":\"0x2d3887076c81425d3954aea7735aebd9093e3df69c8132b1713fae4a34201d43\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://379174c3ec0d0fa0f75ec4620ab85fff83793e1837b6ec19ae2885f013993148\",\"dweb:/ipfs/QmT4rmeUnBa8AY6Sq2SvCiDnZdFYtKm3WGtYAS3Kygoo6z\"]},\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa0e0c28a727524fa94e7e6c1f4c793a6bd1e6d1bc652b7b02b343ebaf4cd774b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dca20fc42d20ce7b6023fafd744dc7e91ed2d1f6c5f1fb45e3004b1d5f33100\",\"dweb:/ipfs/Qmf7MtQTTSJYEhsJ3HDmegt4PFSG13msyFAv4DFAoqyypa\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x8c182806df355c780d3e0b5e7975b32e312e961f0d51f30ba46732bd7b7ba23d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17cd328d8e73eec3b40c4ff19f766e3d991740cafddcc1f4def587ec6862e4f8\",\"dweb:/ipfs/QmSzbMf2oP5ziqQZGRngAerQvEvtkjzXJFpuu2PmhF24BW\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58\",\"dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x0bf1d4f3999a4471e0fded0a2f67e7fe328e2a27385348571b1fc0a8d9c9f62e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737232ccd46bfbe6f34a3e5bc24c345777da47e6ea27bcc46d2c3931883c2257\",\"dweb:/ipfs/QmeA6ikG9dQKZgkJYUVGXcApuCii34h7qtmguToRdSU3qZ\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xa0e50a0f232da7f289430601ba927c315266b20ec739761430b0fde926fefe55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a781d7173d8c3206d08438a9d50881ea4c1356cdf7d9209f95dddb97c0b6c3f8\",\"dweb:/ipfs/QmXJY57T97wCBPc5cSzZ7eBF5jmr7pC4SkcKgYMU4ZQRbh\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x5f2e1158c68c1f3d15b80e8a7dd92b6849f873066969562ad33c0abb80e536ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c829a9d77ae852541d7ed1492cad93c371907f45b8f85134683b76ec62d4969\",\"dweb:/ipfs/QmX5dry5ofeGfGaC8GpDyCx3RHYf3CFpVftc517PVkuRSL\"]},\"lib/space-v1/lib/sense-v1/pkg/utils/src/Trust.sol\":{\"keccak256\":\"0x2d3887076c81425d3954aea7735aebd9093e3df69c8132b1713fae4a34201d43\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://379174c3ec0d0fa0f75ec4620ab85fff83793e1837b6ec19ae2885f013993148\",\"dweb:/ipfs/QmT4rmeUnBa8AY6Sq2SvCiDnZdFYtKm3WGtYAS3Kygoo6z\"]},\"lib/space-v1/lib/sense-v1/pkg/utils/src/libs/Errors.sol\":{\"keccak256\":\"0x5eece5ee6069054e8485c7c799ad1ea764446248088ee16bc0ae08c84f0c52b9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32fe7ac2e991c22032d3d3fa3bdf3ee35405160ae916ab9218d585505c2b370a\",\"dweb:/ipfs/QmS37B5FeitZwzQ2cXpvxjhyvmLujtcxXV7HxWWz7RzWwM\"]},\"lib/space-v1/lib/sense-v1/pkg/utils/src/libs/Levels.sol\":{\"keccak256\":\"0x6c71e17beb73fca7577fb8868086159303eaecb1b397a446e8891b42f73fd502\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b4cda809bda1fe0848733e646f883c6de33569241796fe891ea50ab051bc793a\",\"dweb:/ipfs/QmQZYfEuPDVGLxkZccuMujbKF7mX3RuQ8B2YwB1XtBPMnz\"]},\"src/AutoRoller.sol\":{\"keccak256\":\"0xb776e186a90f3b757462965d3fb41f574addefff9f61beaccec0695b182ae686\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88b053038397fd7dd7e5e2b005acb6296cc79f98578393485abcdfe833dc6e46\",\"dweb:/ipfs/QmRcDiVzuM2XuLJMfpFBLgTSBeKUEca7ShtCdN7PrHtdeB\"]},\"src/SafeCast.sol\":{\"keccak256\":\"0x48479793f4bca68ab9f72602f6b7140f45f2120eacf262e4e1145afb204418ec\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e99a415c822ea26e2d209244e5f420a6ead8653625649addc029ccfa73179478\",\"dweb:/ipfs/QmTKrZZ7DGxiumiwEPahkgJqX6nocTS8LwAfQDVS3Ri2Xs\"]},\"src/external/DateTime.sol\":{\"keccak256\":\"0x84172927f6182fe1969c80e10f5427bff955814a5ef0fd3df821f6fb1bc09eb0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ae0b60f8a8676783e1248a46ce120bbd56a6cba280f27d89f80755b19c56d596\",\"dweb:/ipfs/QmPSFeyVHj9VetaBaSRZwgjeruJbPEegUNUATtcss9uTpr\"]},\"src/interfaces/BalancerVault.sol\":{\"keccak256\":\"0x8648fd61484a815f171ed3f87801aca6cc2126c980a422a7e766f4c59e39bb9e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7c3a3ed0436a26d63d81171be42e5e4d2fc95d747715bce892b747d8b3201828\",\"dweb:/ipfs/QmT9JjSyBDhofAXPjsgEmDSym6B9zvknu6bV25s3e5JAE7\"]},\"src/interfaces/Space.sol\":{\"keccak256\":\"0xf345bbd19641868c94933e7de2347295ef8aae4a8c4bd26357b998e73db66e2e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4afccfc1b518fb57c244cb9e93354cdf37c15fbff5890da91259da6c1c00f872\",\"dweb:/ipfs/QmTMqrCyG4ie25h8PGt6dmWYD5SYYhoLBsVUXCWmjF7KTs\"]},\"src/test/utils/MockOwnedAdapter.sol\":{\"keccak256\":\"0xece3e0e407bcfcfd75c0deabada8009e250e1614e0ed9995465946429d734024\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2fccdd0bd749852fc370a135a7cc28b4285fa1569e76c1eb119dd279ebdd3546\",\"dweb:/ipfs/QmbqsdYXkBMogPeK1k7PTZLRVUEmXuAoCyvGb9Z9prKW7L\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_divider",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_underlying",
              "type": "address"
            },
            {
              "internalType": "struct BaseAdapter.AdapterParams",
              "name": "_adapterParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "oracle",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "stake",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "stakeSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minm",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxm",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "tilt",
                  "type": "uint64"
                },
                {
                  "internalType": "uint48",
                  "name": "level",
                  "type": "uint48"
                },
                {
                  "internalType": "uint16",
                  "name": "mode",
                  "type": "uint16"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FlashCallbackFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPeriphery"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenNotSupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "trusted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UserTrustUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CALLBACK_SUCCESS",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "adapterParams",
          "outputs": [
            {
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "stake",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stakeSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minm",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxm",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "tilt",
              "type": "uint64"
            },
            {
              "internalType": "uint48",
              "name": "level",
              "type": "uint48"
            },
            {
              "internalType": "uint16",
              "name": "mode",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "divider",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "flashFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC3156FlashBorrower",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flashLoan",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaturityBounds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeAndTarget",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ifee",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrusted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "level",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxFlashLoan",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mode",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "notify"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onRedeem"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "openSponsorWindow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "scale",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "scaleStored",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_scale",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "trusted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIsTrusted"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_scale",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setScale"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tilt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlying",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tBal",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrapTarget",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "uBal",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "wrapUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "flashLoan(address,address,uint256,bytes)": {
            "params": {
              "amount": "The amount of target lent.",
              "data": "(encoded adapter address, maturity and YT amount the use has sent in)",
              "receiver": "The contract receiving target, needs to implement the `onFlashLoan(address user, address adapter, uint256 maturity, uint256 amount)` interface."
            }
          },
          "maxFlashLoan(address)": {
            "details": "The amount of currency available to be lent.",
            "params": {
              "token": "The loan currency."
            },
            "returns": {
              "_0": "The amount of `token` that can be borrowed."
            }
          },
          "scaleStored()": {
            "details": "For situations where you need scale from a view function"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "adapterParams()": {
            "notice": "adapter params"
          },
          "divider()": {
            "notice": "Sense core Divider address"
          },
          "flashLoan(address,address,uint256,bytes)": {
            "notice": "Loan `amount` target to `receiver`, and takes it back after the callback."
          },
          "getUnderlyingPrice()": {
            "notice": "Returns the current price of the underlying in ETH terms"
          },
          "ifee()": {
            "notice": "Issuance fee"
          },
          "notify(address,uint256,bool)": {
            "notice": "Notification whenever the Divider adds or removes Target"
          },
          "onRedeem(uint256,uint256,uint256,uint256)": {
            "notice": "Hook called whenever a user redeems PT"
          },
          "scale()": {
            "notice": "Calculate and return this adapter's Scale value for the current timestamp. To be overriden by child contracts"
          },
          "scaleStored()": {
            "notice": "Cached scale value getter"
          },
          "target()": {
            "notice": "Target token to divide"
          },
          "underlying()": {
            "notice": "Underlying for the Target"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@balancer-labs/=lib/sense-v1/node_modules/@balancer-labs/",
        ":@balancer-labs/v2-pool-utils/=lib/space-v1/lib/balancer-v2-monorepo/pkg/pool-utils/",
        ":@balancer-labs/v2-solidity-utils/=lib/space-v1/lib/balancer-v2-monorepo/pkg/solidity-utils/",
        ":@balancer-labs/v2-vault/=lib/space-v1/lib/balancer-v2-monorepo/pkg/vault/",
        ":@openzeppelin/=lib/sense-v1/node_modules/@openzeppelin/",
        ":@openzeppelin/contracts/=lib/sense-v1/node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=lib/sense-v1/node_modules/@rari-capital/",
        ":@sense-finance/=lib/sense-v1/node_modules/@sense-finance/",
        ":@sense-finance/v1-core/=lib/space-v1/lib/sense-v1/pkg/core/",
        ":@sense-finance/v1-utils/=lib/space-v1/lib/sense-v1/pkg/utils/",
        ":balancer-v2-monorepo/=lib/space-v1/lib/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=lib/sense-v1/node_modules/hardhat-deploy/",
        ":hardhat/=lib/sense-v1/node_modules/hardhat/",
        ":prettier-plugin-solidity/=lib/sense-v1/node_modules/prettier-plugin-solidity/",
        ":sense-v1-core/=lib/sense-v1/pkg/core/src/",
        ":sense-v1-utils/=lib/sense-v1/pkg/utils/src/",
        ":sense-v1/=lib/sense-v1/pkg/core/src/",
        ":solmate/=lib/solmate/src/",
        ":space-v1/=lib/space-v1/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/utils/MockOwnedAdapter.sol": "MockOwnableAdapter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/sense-v1/node_modules/@openzeppelin/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/sense-v1/node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/sense-v1/pkg/core/src/Divider.sol": {
        "keccak256": "0x26c550f6e5d169e4978b3f1d4a52c6ac057472cec74d95d8f95f8df93f7472bf",
        "urls": [
          "bzz-raw://1961fe6eca22c421a4701df9b030929ed4a788da4aa544a6cdcc7a8d2bf5e0c7",
          "dweb:/ipfs/QmP3uTuNuVPqtWqS2MysCK1F576MBBFTZCdca8BiFV4v7t"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sense-v1/pkg/core/src/adapters/abstract/BaseAdapter.sol": {
        "keccak256": "0xa4a27a2ac7c325c9181235588347fdc5d6241e9e6bf447cc83e27ff8dc1e54a0",
        "urls": [
          "bzz-raw://69503ff5078dfc8814415d00d41a35490a8da0d2be75319832afb0795f66d669",
          "dweb:/ipfs/QmRTFBTywMS2pNdYGyZQXkiZk7LD573D2jhu4Yh1BAESZH"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sense-v1/pkg/core/src/adapters/abstract/IClaimer.sol": {
        "keccak256": "0x4ebf74198a08a1b88281820f65f91f44d04648079fda7de8d3b8a9a1aa7a5d64",
        "urls": [
          "bzz-raw://f3676511e7198a19811136b3afebe7a94a42c21f20ebb592db7712796a42425a",
          "dweb:/ipfs/QmQmHWa5kyLQUf3KDpBPtiXc1KS53RADDLZ5GfzmNJmfoo"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sense-v1/pkg/core/src/adapters/abstract/extensions/Crop.sol": {
        "keccak256": "0x73725e08f53ef8a78c2639fde44d0554cb1a87c8e0707864e09909f1875bb592",
        "urls": [
          "bzz-raw://a95b1b867cd4ee4bfe2c5a18d57e4e149609fbdece6c902006b43cb63cf8e160",
          "dweb:/ipfs/QmaVEGnW2iqHfFN4rBAmDdcoGs4zF5vvVjNBJkBSeXYjjn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sense-v1/pkg/core/src/adapters/abstract/extensions/Crops.sol": {
        "keccak256": "0x2d1f2924fb736bcd6fd8f621afc25ee2e0f1d52d4073b116ce18fbb41d1c180b",
        "urls": [
          "bzz-raw://88895991edce4bd05a195e1181c8a6257628a5b60c12cbf4768e4c61cad24404",
          "dweb:/ipfs/QmSDFR9JSTyNMPdEHGUCr7kmthctXLwnb2rb1qVQy2gef8"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sense-v1/pkg/core/src/external/DateTime.sol": {
        "keccak256": "0x8437e029aee574dc861bde9293e8501d4c98e3e72b96e0a642731d24893c0053",
        "urls": [
          "bzz-raw://cdeb5611548b519cd1970fb6f2d23e9860699b4429d8c54f3bac3790ff70a85f",
          "dweb:/ipfs/QmTmmdVqCJc77AUNCCfFa5avCbK45nWp2PW5cAMchPiypr"
        ],
        "license": null
      },
      "lib/sense-v1/pkg/core/src/external/FixedMath.sol": {
        "keccak256": "0x525bf5c2c917f4626a4048c0908b751d3cf3dbb1862df60561f33245e9ececd0",
        "urls": [
          "bzz-raw://7645e28a04878990cf6b7547f442807e5245013fc6a387fe670ed8dff04e93c6",
          "dweb:/ipfs/QmSSbWM8vVvUM1kgFpcdAowYcr5jWcuD8s4YKMjPXCJndQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sense-v1/pkg/core/src/external/flashloan/IERC3156FlashBorrower.sol": {
        "keccak256": "0xa2007326dfc89668d1864d688373d7e1ee07fee48f605d4f6726224004bdc8e5",
        "urls": [
          "bzz-raw://d323f9f53322773266e9fc2fed02a49be168f2855d7bb888889eb2540680e6bb",
          "dweb:/ipfs/QmcFD7VCFeZvReYBo61ujnqDXMRpHbBhDxh47d49h6cmqT"
        ],
        "license": null
      },
      "lib/sense-v1/pkg/core/src/external/flashloan/IERC3156FlashLender.sol": {
        "keccak256": "0xc91333a7ff49db20853c817de2c277a0559a1ee75eb1deeb7d2096a5d1022d61",
        "urls": [
          "bzz-raw://32d3759ce15ad86042edd65287092c4fff04de6e87e702976cd1e59161d334fd",
          "dweb:/ipfs/QmRfB8sPsDoASMknbKXw2RDNGhaA6wprubLxczT1BvZ9z8"
        ],
        "license": null
      },
      "lib/sense-v1/pkg/core/src/tokens/Token.sol": {
        "keccak256": "0x18ac77734fd7449108f58409d10a4291131b095a4ae4fd604bcf5f10546c7fba",
        "urls": [
          "bzz-raw://b1fd2ca69cfe9d3cc9e72ed3d4594045bebeaa9da5fb0f2be6db70f4c852576b",
          "dweb:/ipfs/QmU2nLPH33rdsXiDUqz1YQWiksDEYSDhsBTSKCdjHaWzDz"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sense-v1/pkg/core/src/tokens/YT.sol": {
        "keccak256": "0x3d6d073e63ea5e9832c571a1694e3048624639afff308d45097fa894bf0c9308",
        "urls": [
          "bzz-raw://3dd8f35290d2dc0057b09e79d10a5bbae2ad1cb2da3796ec755e6191dba81199",
          "dweb:/ipfs/Qmb4WHaBWe8jGddDXc7HcQRCcjF3uS9wndzh3afFQiZ5Tc"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/sense-v1/pkg/utils/src/Trust.sol": {
        "keccak256": "0x2d3887076c81425d3954aea7735aebd9093e3df69c8132b1713fae4a34201d43",
        "urls": [
          "bzz-raw://379174c3ec0d0fa0f75ec4620ab85fff83793e1837b6ec19ae2885f013993148",
          "dweb:/ipfs/QmT4rmeUnBa8AY6Sq2SvCiDnZdFYtKm3WGtYAS3Kygoo6z"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/mixins/ERC4626.sol": {
        "keccak256": "0xa0e0c28a727524fa94e7e6c1f4c793a6bd1e6d1bc652b7b02b343ebaf4cd774b",
        "urls": [
          "bzz-raw://1dca20fc42d20ce7b6023fafd744dc7e91ed2d1f6c5f1fb45e3004b1d5f33100",
          "dweb:/ipfs/Qmf7MtQTTSJYEhsJ3HDmegt4PFSG13msyFAv4DFAoqyypa"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x8c182806df355c780d3e0b5e7975b32e312e961f0d51f30ba46732bd7b7ba23d",
        "urls": [
          "bzz-raw://17cd328d8e73eec3b40c4ff19f766e3d991740cafddcc1f4def587ec6862e4f8",
          "dweb:/ipfs/QmSzbMf2oP5ziqQZGRngAerQvEvtkjzXJFpuu2PmhF24BW"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69",
        "urls": [
          "bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58",
          "dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x0bf1d4f3999a4471e0fded0a2f67e7fe328e2a27385348571b1fc0a8d9c9f62e",
        "urls": [
          "bzz-raw://737232ccd46bfbe6f34a3e5bc24c345777da47e6ea27bcc46d2c3931883c2257",
          "dweb:/ipfs/QmeA6ikG9dQKZgkJYUVGXcApuCii34h7qtmguToRdSU3qZ"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xa0e50a0f232da7f289430601ba927c315266b20ec739761430b0fde926fefe55",
        "urls": [
          "bzz-raw://a781d7173d8c3206d08438a9d50881ea4c1356cdf7d9209f95dddb97c0b6c3f8",
          "dweb:/ipfs/QmXJY57T97wCBPc5cSzZ7eBF5jmr7pC4SkcKgYMU4ZQRbh"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x5f2e1158c68c1f3d15b80e8a7dd92b6849f873066969562ad33c0abb80e536ff",
        "urls": [
          "bzz-raw://8c829a9d77ae852541d7ed1492cad93c371907f45b8f85134683b76ec62d4969",
          "dweb:/ipfs/QmX5dry5ofeGfGaC8GpDyCx3RHYf3CFpVftc517PVkuRSL"
        ],
        "license": "MIT"
      },
      "lib/space-v1/lib/sense-v1/pkg/utils/src/Trust.sol": {
        "keccak256": "0x2d3887076c81425d3954aea7735aebd9093e3df69c8132b1713fae4a34201d43",
        "urls": [
          "bzz-raw://379174c3ec0d0fa0f75ec4620ab85fff83793e1837b6ec19ae2885f013993148",
          "dweb:/ipfs/QmT4rmeUnBa8AY6Sq2SvCiDnZdFYtKm3WGtYAS3Kygoo6z"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/space-v1/lib/sense-v1/pkg/utils/src/libs/Errors.sol": {
        "keccak256": "0x5eece5ee6069054e8485c7c799ad1ea764446248088ee16bc0ae08c84f0c52b9",
        "urls": [
          "bzz-raw://32fe7ac2e991c22032d3d3fa3bdf3ee35405160ae916ab9218d585505c2b370a",
          "dweb:/ipfs/QmS37B5FeitZwzQ2cXpvxjhyvmLujtcxXV7HxWWz7RzWwM"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/space-v1/lib/sense-v1/pkg/utils/src/libs/Levels.sol": {
        "keccak256": "0x6c71e17beb73fca7577fb8868086159303eaecb1b397a446e8891b42f73fd502",
        "urls": [
          "bzz-raw://b4cda809bda1fe0848733e646f883c6de33569241796fe891ea50ab051bc793a",
          "dweb:/ipfs/QmQZYfEuPDVGLxkZccuMujbKF7mX3RuQ8B2YwB1XtBPMnz"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/AutoRoller.sol": {
        "keccak256": "0xb776e186a90f3b757462965d3fb41f574addefff9f61beaccec0695b182ae686",
        "urls": [
          "bzz-raw://88b053038397fd7dd7e5e2b005acb6296cc79f98578393485abcdfe833dc6e46",
          "dweb:/ipfs/QmRcDiVzuM2XuLJMfpFBLgTSBeKUEca7ShtCdN7PrHtdeB"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/SafeCast.sol": {
        "keccak256": "0x48479793f4bca68ab9f72602f6b7140f45f2120eacf262e4e1145afb204418ec",
        "urls": [
          "bzz-raw://e99a415c822ea26e2d209244e5f420a6ead8653625649addc029ccfa73179478",
          "dweb:/ipfs/QmTKrZZ7DGxiumiwEPahkgJqX6nocTS8LwAfQDVS3Ri2Xs"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/DateTime.sol": {
        "keccak256": "0x84172927f6182fe1969c80e10f5427bff955814a5ef0fd3df821f6fb1bc09eb0",
        "urls": [
          "bzz-raw://ae0b60f8a8676783e1248a46ce120bbd56a6cba280f27d89f80755b19c56d596",
          "dweb:/ipfs/QmPSFeyVHj9VetaBaSRZwgjeruJbPEegUNUATtcss9uTpr"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/BalancerVault.sol": {
        "keccak256": "0x8648fd61484a815f171ed3f87801aca6cc2126c980a422a7e766f4c59e39bb9e",
        "urls": [
          "bzz-raw://7c3a3ed0436a26d63d81171be42e5e4d2fc95d747715bce892b747d8b3201828",
          "dweb:/ipfs/QmT9JjSyBDhofAXPjsgEmDSym6B9zvknu6bV25s3e5JAE7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/Space.sol": {
        "keccak256": "0xf345bbd19641868c94933e7de2347295ef8aae4a8c4bd26357b998e73db66e2e",
        "urls": [
          "bzz-raw://4afccfc1b518fb57c244cb9e93354cdf37c15fbff5890da91259da6c1c00f872",
          "dweb:/ipfs/QmTMqrCyG4ie25h8PGt6dmWYD5SYYhoLBsVUXCWmjF7KTs"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/test/utils/MockOwnedAdapter.sol": {
        "keccak256": "0xece3e0e407bcfcfd75c0deabada8009e250e1614e0ed9995465946429d734024",
        "urls": [
          "bzz-raw://2fccdd0bd749852fc370a135a7cc28b4285fa1569e76c1eb119dd279ebdd3546",
          "dweb:/ipfs/QmbqsdYXkBMogPeK1k7PTZLRVUEmXuAoCyvGb9Z9prKW7L"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/utils/MockOwnedAdapter.sol",
    "id": 37800,
    "exportedSymbols": {
      "AutoRoller": [
        30551
      ],
      "BaseAdapter": [
        21332
      ],
      "ERC20": [
        26855
      ],
      "MockERC20": [
        26467
      ],
      "MockOwnableAdapter": [
        37799
      ],
      "Opener": [
        37490
      ],
      "OwnableAdapter": [
        37509
      ],
      "SpaceFactoryLike": [
        27661
      ],
      "Trust": [
        25018
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2841:90",
    "nodes": [
      {
        "id": 37471,
        "nodeType": "PragmaDirective",
        "src": "39:23:90",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 37473,
        "nodeType": "ImportDirective",
        "src": "64:49:90",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37800,
        "sourceUnit": 26856,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37472,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26855,
              "src": "73:5:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37475,
        "nodeType": "ImportDirective",
        "src": "114:67:90",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37800,
        "sourceUnit": 26468,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37474,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26467,
              "src": "123:9:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37477,
        "nodeType": "ImportDirective",
        "src": "183:49:90",
        "nodes": [],
        "absolutePath": "lib/sense-v1/pkg/utils/src/Trust.sol",
        "file": "sense-v1-utils/Trust.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37800,
        "sourceUnit": 25019,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37476,
              "name": "Trust",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25018,
              "src": "192:5:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37479,
        "nodeType": "ImportDirective",
        "src": "233:78:90",
        "nodes": [],
        "absolutePath": "lib/sense-v1/pkg/core/src/adapters/abstract/BaseAdapter.sol",
        "file": "sense-v1-core/adapters/abstract/BaseAdapter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37800,
        "sourceUnit": 21333,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37478,
              "name": "BaseAdapter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21332,
              "src": "242:11:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37482,
        "nodeType": "ImportDirective",
        "src": "313:68:90",
        "nodes": [],
        "absolutePath": "src/AutoRoller.sol",
        "file": "../../AutoRoller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37800,
        "sourceUnit": 30780,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37480,
              "name": "AutoRoller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30551,
              "src": "322:10:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37481,
              "name": "SpaceFactoryLike",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27661,
              "src": "334:16:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37490,
        "nodeType": "ContractDefinition",
        "src": "383:83:90",
        "nodes": [
          {
            "id": 37489,
            "nodeType": "FunctionDefinition",
            "src": "406:58:90",
            "nodes": [],
            "functionSelector": "dfd4718f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onSponsorWindowOpened",
            "nameLocation": "415:21:90",
            "parameters": {
              "id": 37487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37489,
                  "src": "437:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37486,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37489,
                  "src": "446:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:18:90"
            },
            "returnParameters": {
              "id": 37488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:0:90"
            },
            "scope": 37490,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Opener",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          37490
        ],
        "name": "Opener",
        "nameLocation": "393:6:90",
        "scope": 37800,
        "usedErrors": []
      },
      {
        "id": 37509,
        "nodeType": "ContractDefinition",
        "src": "468:174:90",
        "nodes": [
          {
            "id": 37508,
            "nodeType": "FunctionDefinition",
            "src": "522:118:90",
            "nodes": [],
            "body": {
              "id": 37507,
              "nodeType": "Block",
              "src": "568:72:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 37502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "627:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 37501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "619:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37500,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "619:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "619:10:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 37504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "631:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 37496,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "585:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "585:10:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37495,
                          "name": "Opener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37490,
                          "src": "578:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Opener_$37490_$",
                            "typeString": "type(contract Opener)"
                          }
                        },
                        "id": 37498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "578:18:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Opener_$37490",
                          "typeString": "contract Opener"
                        }
                      },
                      "id": 37499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onSponsorWindowOpened",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37489,
                      "src": "578:40:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 37505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:55:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37506,
                  "nodeType": "ExpressionStatement",
                  "src": "578:55:90"
                }
              ]
            },
            "functionSelector": "2c5786b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openSponsorWindow",
            "nameLocation": "531:17:90",
            "parameters": {
              "id": 37493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:2:90"
            },
            "returnParameters": {
              "id": 37494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:90"
            },
            "scope": 37509,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 37491,
              "name": "BaseAdapter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21332,
              "src": "504:11:90"
            },
            "id": 37492,
            "nodeType": "InheritanceSpecifier",
            "src": "504:11:90"
          }
        ],
        "canonicalName": "OwnableAdapter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          37509,
          21332,
          23920
        ],
        "name": "OwnableAdapter",
        "nameLocation": "486:14:90",
        "scope": 37800,
        "usedErrors": [
          38664,
          38672,
          38674
        ]
      },
      {
        "id": 37799,
        "nodeType": "ContractDefinition",
        "src": "644:2236:90",
        "nodes": [
          {
            "id": 37517,
            "nodeType": "VariableDeclaration",
            "src": "703:38:90",
            "nodes": [],
            "baseFunctions": [
              21179
            ],
            "constant": false,
            "functionSelector": "f51e181a",
            "mutability": "mutable",
            "name": "scale",
            "nameLocation": "727:5:90",
            "overrides": {
              "id": 37515,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "718:8:90"
            },
            "scope": 37799,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37514,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "703:7:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "312e31653138",
              "id": 37516,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:6:90",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1100000000000000000_by_1",
                "typeString": "int_const 1100000000000000000"
              },
              "value": "1.1e18"
            },
            "visibility": "public"
          },
          {
            "id": 37520,
            "nodeType": "VariableDeclaration",
            "src": "747:25:90",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "open",
            "nameLocation": "764:4:90",
            "scope": 37799,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37518,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "747:7:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 37519,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "771:1:90",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 37544,
            "nodeType": "FunctionDefinition",
            "src": "779:235:90",
            "nodes": [],
            "body": {
              "id": 37543,
              "nodeType": "Block",
              "src": "1011:3:90",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 37532,
                    "name": "_divider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37522,
                    "src": "934:8:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 37533,
                    "name": "_target",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37524,
                    "src": "944:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 37534,
                    "name": "_underlying",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37526,
                    "src": "953:11:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "302e30303132653138",
                    "id": 37535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "966:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1200000000000000_by_1",
                      "typeString": "int_const 1200000000000000"
                    },
                    "value": "0.0012e18"
                  },
                  {
                    "id": 37536,
                    "name": "_adapterParams",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37529,
                    "src": "977:14:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AdapterParams_$20998_memory_ptr",
                      "typeString": "struct BaseAdapter.AdapterParams memory"
                    }
                  }
                ],
                "id": 37537,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37531,
                  "name": "BaseAdapter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21332,
                  "src": "922:11:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "922:70:90"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 37539,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "999:3:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 37540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "999:10:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 37541,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37538,
                  "name": "Trust",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25018,
                  "src": "993:5:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "993:17:90"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37522,
                  "mutability": "mutable",
                  "name": "_divider",
                  "nameLocation": "808:8:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37544,
                  "src": "800:16:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37524,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "834:7:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37544,
                  "src": "826:15:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37526,
                  "mutability": "mutable",
                  "name": "_underlying",
                  "nameLocation": "859:11:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37544,
                  "src": "851:19:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37529,
                  "mutability": "mutable",
                  "name": "_adapterParams",
                  "nameLocation": "901:14:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37544,
                  "src": "880:35:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AdapterParams_$20998_memory_ptr",
                    "typeString": "struct BaseAdapter.AdapterParams"
                  },
                  "typeName": {
                    "id": 37528,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37527,
                      "name": "AdapterParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20998,
                      "src": "880:13:90"
                    },
                    "referencedDeclaration": 20998,
                    "src": "880:13:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AdapterParams_$20998_storage_ptr",
                      "typeString": "struct BaseAdapter.AdapterParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "790:131:90"
            },
            "returnParameters": {
              "id": 37542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:0:90"
            },
            "scope": 37799,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37555,
            "nodeType": "FunctionDefinition",
            "src": "1020:110:90",
            "nodes": [],
            "body": {
              "id": 37554,
              "nodeType": "Block",
              "src": "1099:31:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37550,
                      "name": "_scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37548,
                      "src": "1109:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37551,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37517,
                      "src": "1118:5:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1109:14:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37553,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:14:90"
                }
              ]
            },
            "baseFunctions": [
              21185
            ],
            "functionSelector": "22677849",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scaleStored",
            "nameLocation": "1029:11:90",
            "overrides": {
              "id": 37546,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1065:8:90"
            },
            "parameters": {
              "id": 37545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1040:2:90"
            },
            "returnParameters": {
              "id": 37549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37548,
                  "mutability": "mutable",
                  "name": "_scale",
                  "nameLocation": "1091:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37555,
                  "src": "1083:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1082:16:90"
            },
            "scope": 37799,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 37641,
            "nodeType": "FunctionDefinition",
            "src": "1136:586:90",
            "nodes": [],
            "body": {
              "id": 37640,
              "nodeType": "Block",
              "src": "1228:494:90",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37565,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "1248:6:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 37640,
                      "src": "1238:16:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$26467",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 37564,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37563,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26467,
                          "src": "1238:9:90"
                        },
                        "referencedDeclaration": 26467,
                        "src": "1238:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37569,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37567,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20963,
                        "src": "1267:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37566,
                      "name": "MockERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26467,
                      "src": "1257:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$26467_$",
                        "typeString": "type(contract MockERC20)"
                      }
                    },
                    "id": 37568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:17:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$26467",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1238:36:90"
                },
                {
                  "assignments": [
                    37572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37572,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "1294:10:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 37640,
                      "src": "1284:20:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$26467",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 37571,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37570,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26467,
                          "src": "1284:9:90"
                        },
                        "referencedDeclaration": 26467,
                        "src": "1284:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37576,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37574,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20966,
                        "src": "1317:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37573,
                      "name": "MockERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26467,
                      "src": "1307:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$26467_$",
                        "typeString": "type(contract MockERC20)"
                      }
                    },
                    "id": 37575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1307:21:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$26467",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1284:44:90"
                },
                {
                  "assignments": [
                    37578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37578,
                      "mutability": "mutable",
                      "name": "tDecimals",
                      "nameLocation": "1347:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 37640,
                      "src": "1339:17:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37577,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1339:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37582,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37579,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37565,
                        "src": "1359:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 37580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26492,
                      "src": "1359:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 37581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1359:17:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1339:37:90"
                },
                {
                  "assignments": [
                    37584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37584,
                      "mutability": "mutable",
                      "name": "uDecimals",
                      "nameLocation": "1394:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 37640,
                      "src": "1386:17:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1386:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37588,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37585,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37572,
                        "src": "1406:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 37586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26492,
                      "src": "1406:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 37587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:21:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1386:41:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37592,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1462:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1462:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 37596,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1482:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOwnableAdapter_$37799",
                              "typeString": "contract MockOwnableAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockOwnableAdapter_$37799",
                              "typeString": "contract MockOwnableAdapter"
                            }
                          ],
                          "id": 37595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1474:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37594,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1474:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1474:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37598,
                        "name": "uBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37557,
                        "src": "1489:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37589,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37572,
                        "src": "1438:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 37591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26666,
                      "src": "1438:23:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 37599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:56:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37600,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:56:90"
                },
                {
                  "expression": {
                    "id": 37630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37601,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37561,
                      "src": "1504:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37602,
                          "name": "uDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37584,
                          "src": "1516:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 37603,
                          "name": "tDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37578,
                          "src": "1528:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1516:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 37619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 37617,
                              "name": "uBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37557,
                              "src": "1619:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 37618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1626:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "1619:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 37620,
                            "name": "scale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37517,
                            "src": "1633:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1619:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 37624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 37622,
                                  "name": "uDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37584,
                                  "src": "1642:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 37623,
                                  "name": "tDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37578,
                                  "src": "1654:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1642:21:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 37625,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1641:23:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 37626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1668:2:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "1641:29:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1619:51:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 37629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "1516:154:90",
                      "trueExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 37607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 37605,
                              "name": "uBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37557,
                              "src": "1553:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 37606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1560:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "1553:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 37608,
                            "name": "scale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37517,
                            "src": "1567:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1553:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 37612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 37610,
                                  "name": "tDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37578,
                                  "src": "1576:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 37611,
                                  "name": "uDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37584,
                                  "src": "1588:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1576:21:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 37613,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1575:23:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 37614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1602:2:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "1575:29:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1553:51:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1504:166:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37631,
                  "nodeType": "ExpressionStatement",
                  "src": "1504:166:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37635,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1693:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1693:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37637,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37561,
                        "src": "1705:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37632,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37565,
                        "src": "1681:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 37634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26453,
                      "src": "1681:11:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 37638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1681:34:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37639,
                  "nodeType": "ExpressionStatement",
                  "src": "1681:34:90"
                }
              ]
            },
            "baseFunctions": [
              21199
            ],
            "functionSelector": "4aae9fed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrapUnderlying",
            "nameLocation": "1145:14:90",
            "overrides": {
              "id": 37559,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1191:8:90"
            },
            "parameters": {
              "id": 37558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37557,
                  "mutability": "mutable",
                  "name": "uBal",
                  "nameLocation": "1168:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37641,
                  "src": "1160:12:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1159:14:90"
            },
            "returnParameters": {
              "id": 37562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37561,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1217:9:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37641,
                  "src": "1209:17:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1208:19:90"
            },
            "scope": 37799,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 37727,
            "nodeType": "FunctionDefinition",
            "src": "1728:596:90",
            "nodes": [],
            "body": {
              "id": 37726,
              "nodeType": "Block",
              "src": "1818:506:90",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37651,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "1838:6:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 37726,
                      "src": "1828:16:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$26467",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 37650,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37649,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26467,
                          "src": "1828:9:90"
                        },
                        "referencedDeclaration": 26467,
                        "src": "1828:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37655,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37653,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20963,
                        "src": "1857:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37652,
                      "name": "MockERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26467,
                      "src": "1847:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$26467_$",
                        "typeString": "type(contract MockERC20)"
                      }
                    },
                    "id": 37654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:17:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$26467",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1828:36:90"
                },
                {
                  "assignments": [
                    37658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37658,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nameLocation": "1884:10:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 37726,
                      "src": "1874:20:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$26467",
                        "typeString": "contract MockERC20"
                      },
                      "typeName": {
                        "id": 37657,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37656,
                          "name": "MockERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26467,
                          "src": "1874:9:90"
                        },
                        "referencedDeclaration": 26467,
                        "src": "1874:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37662,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37660,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20966,
                        "src": "1907:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37659,
                      "name": "MockERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26467,
                      "src": "1897:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MockERC20_$26467_$",
                        "typeString": "type(contract MockERC20)"
                      }
                    },
                    "id": 37661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:21:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$26467",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1874:44:90"
                },
                {
                  "assignments": [
                    37664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37664,
                      "mutability": "mutable",
                      "name": "tDecimals",
                      "nameLocation": "1937:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 37726,
                      "src": "1929:17:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1929:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37668,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37665,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37651,
                        "src": "1949:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 37666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26492,
                      "src": "1949:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 37667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1949:17:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1929:37:90"
                },
                {
                  "assignments": [
                    37670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37670,
                      "mutability": "mutable",
                      "name": "uDecimals",
                      "nameLocation": "1984:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 37726,
                      "src": "1976:17:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37669,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1976:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37674,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37671,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37658,
                        "src": "1996:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 37672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26492,
                      "src": "1996:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 37673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:21:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1976:41:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37678,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2048:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2048:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 37682,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2068:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockOwnableAdapter_$37799",
                              "typeString": "contract MockOwnableAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockOwnableAdapter_$37799",
                              "typeString": "contract MockOwnableAdapter"
                            }
                          ],
                          "id": 37681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2060:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37680,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2060:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2060:13:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37684,
                        "name": "tBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37643,
                        "src": "2075:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37675,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37651,
                        "src": "2028:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 37677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26666,
                      "src": "2028:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 37685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2028:52:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37686,
                  "nodeType": "ExpressionStatement",
                  "src": "2028:52:90"
                },
                {
                  "expression": {
                    "id": 37716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37687,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37647,
                      "src": "2090:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37688,
                          "name": "uDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37670,
                          "src": "2102:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 37689,
                          "name": "tDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37664,
                          "src": "2114:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2102:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 37705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 37703,
                              "name": "tBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37643,
                              "src": "2205:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 37704,
                              "name": "scale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37517,
                              "src": "2212:5:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2205:12:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 37706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2220:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "2205:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 37710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 37708,
                                  "name": "uDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37670,
                                  "src": "2228:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 37709,
                                  "name": "tDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37664,
                                  "src": "2240:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2228:21:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 37711,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2227:23:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 37712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2254:2:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2227:29:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2205:51:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 37715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2102:154:90",
                      "trueExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 37693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 37691,
                              "name": "tBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37643,
                              "src": "2139:4:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 37692,
                              "name": "scale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37517,
                              "src": "2146:5:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2139:12:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 37694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2154:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "2139:19:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 37698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 37696,
                                  "name": "tDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37664,
                                  "src": "2162:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 37697,
                                  "name": "uDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37670,
                                  "src": "2174:9:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2162:21:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 37699,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2161:23:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 37700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2188:2:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2161:29:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2139:51:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2090:166:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37717,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:166:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37721,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2295:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2295:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37723,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37647,
                        "src": "2307:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37718,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37658,
                        "src": "2279:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$26467",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 37720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26453,
                      "src": "2279:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 37724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:38:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37725,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:38:90"
                }
              ]
            },
            "baseFunctions": [
              21207
            ],
            "functionSelector": "51c39ea1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapTarget",
            "nameLocation": "1737:12:90",
            "overrides": {
              "id": 37645,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1781:8:90"
            },
            "parameters": {
              "id": 37644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37643,
                  "mutability": "mutable",
                  "name": "tBal",
                  "nameLocation": "1758:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37727,
                  "src": "1750:12:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1749:14:90"
            },
            "returnParameters": {
              "id": 37648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37647,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1807:9:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37727,
                  "src": "1799:17:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1798:19:90"
            },
            "scope": 37799,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 37736,
            "nodeType": "FunctionDefinition",
            "src": "2330:107:90",
            "nodes": [],
            "body": {
              "id": 37735,
              "nodeType": "Block",
              "src": "2409:28:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31653138",
                    "id": 37733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2426:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "functionReturnParameters": 37732,
                  "id": 37734,
                  "nodeType": "Return",
                  "src": "2419:11:90"
                }
              ]
            },
            "baseFunctions": [
              21191
            ],
            "functionSelector": "468f02d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnderlyingPrice",
            "nameLocation": "2339:18:90",
            "overrides": {
              "id": 37729,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2382:8:90"
            },
            "parameters": {
              "id": 37728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2357:2:90"
            },
            "returnParameters": {
              "id": 37732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37731,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37736,
                  "src": "2400:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2400:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2399:9:90"
            },
            "scope": 37799,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 37746,
            "nodeType": "FunctionDefinition",
            "src": "2443:74:90",
            "nodes": [],
            "body": {
              "id": 37745,
              "nodeType": "Block",
              "src": "2486:31:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37741,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37517,
                      "src": "2496:5:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37742,
                      "name": "_scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37738,
                      "src": "2504:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2496:14:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37744,
                  "nodeType": "ExpressionStatement",
                  "src": "2496:14:90"
                }
              ]
            },
            "functionSelector": "3edc3519",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setScale",
            "nameLocation": "2452:8:90",
            "parameters": {
              "id": 37739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37738,
                  "mutability": "mutable",
                  "name": "_scale",
                  "nameLocation": "2469:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 37746,
                  "src": "2461:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2461:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2460:16:90"
            },
            "returnParameters": {
              "id": 37740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2486:0:90"
            },
            "scope": 37799,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37772,
            "nodeType": "FunctionDefinition",
            "src": "2523:200:90",
            "nodes": [],
            "body": {
              "id": 37771,
              "nodeType": "Block",
              "src": "2584:139:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37752,
                      "name": "open",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37520,
                      "src": "2594:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 37753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2601:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "2594:8:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37755,
                  "nodeType": "ExpressionStatement",
                  "src": "2594:8:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37761,
                          "name": "adapterParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20973,
                          "src": "2653:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdapterParams_$20998_storage",
                            "typeString": "struct BaseAdapter.AdapterParams storage ref"
                          }
                        },
                        "id": 37762,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20979,
                        "src": "2653:19:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 37763,
                          "name": "adapterParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20973,
                          "src": "2674:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdapterParams_$20998_storage",
                            "typeString": "struct BaseAdapter.AdapterParams storage ref"
                          }
                        },
                        "id": 37764,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakeSize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20982,
                        "src": "2674:23:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 37757,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2619:3:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2619:10:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37756,
                          "name": "Opener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37490,
                          "src": "2612:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Opener_$37490_$",
                            "typeString": "type(contract Opener)"
                          }
                        },
                        "id": 37759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2612:18:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Opener_$37490",
                          "typeString": "contract Opener"
                        }
                      },
                      "id": 37760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onSponsorWindowOpened",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37489,
                      "src": "2612:40:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 37765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2612:86:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37766,
                  "nodeType": "ExpressionStatement",
                  "src": "2612:86:90"
                },
                {
                  "expression": {
                    "id": 37769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37767,
                      "name": "open",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37520,
                      "src": "2708:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 37768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2715:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2708:8:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37770,
                  "nodeType": "ExpressionStatement",
                  "src": "2708:8:90"
                }
              ]
            },
            "baseFunctions": [
              37508
            ],
            "functionSelector": "2c5786b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37750,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37749,
                  "name": "requiresTrust",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25017,
                  "src": "2570:13:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "2570:13:90"
              }
            ],
            "name": "openSponsorWindow",
            "nameLocation": "2532:17:90",
            "overrides": {
              "id": 37748,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2561:8:90"
            },
            "parameters": {
              "id": 37747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2549:2:90"
            },
            "returnParameters": {
              "id": 37751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2584:0:90"
            },
            "scope": 37799,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37798,
            "nodeType": "FunctionDefinition",
            "src": "2729:149:90",
            "nodes": [],
            "body": {
              "id": 37797,
              "nodeType": "Block",
              "src": "2808:70:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 37782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37780,
                        "name": "open",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37520,
                        "src": "2825:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 37781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "2825:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "hexValue": "30",
                          "id": 37792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2866:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 37793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2869:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 37794,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2865:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                        "typeString": "tuple(int_const 0,int_const 0)"
                      }
                    },
                    "id": 37795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2825:46:90",
                    "trueExpression": {
                      "components": [
                        {
                          "hexValue": "30",
                          "id": 37783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2838:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 37790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 37786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2846:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  },
                                  "typeName": {
                                    "id": 37785,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2846:6:90",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  }
                                ],
                                "id": 37784,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "2841:4:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 37787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2841:12:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint64",
                                "typeString": "type(uint64)"
                              }
                            },
                            "id": 37788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "2841:16:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 37789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2860:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2841:20:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "id": 37791,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2837:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_uint64_$",
                        "typeString": "tuple(int_const 0,uint64)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint64_$",
                      "typeString": "tuple(uint8,uint64)"
                    }
                  },
                  "functionReturnParameters": 37779,
                  "id": 37796,
                  "nodeType": "Return",
                  "src": "2818:53:90"
                }
              ]
            },
            "baseFunctions": [
              21287
            ],
            "functionSelector": "64c56e3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaturityBounds",
            "nameLocation": "2738:17:90",
            "overrides": {
              "id": 37774,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2772:8:90"
            },
            "parameters": {
              "id": 37773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2755:2:90"
            },
            "returnParameters": {
              "id": 37779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37776,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37798,
                  "src": "2790:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37778,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37798,
                  "src": "2799:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2789:18:90"
            },
            "scope": 37799,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37510,
              "name": "OwnableAdapter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37509,
              "src": "675:14:90"
            },
            "id": 37511,
            "nodeType": "InheritanceSpecifier",
            "src": "675:14:90"
          },
          {
            "baseName": {
              "id": 37512,
              "name": "Trust",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25018,
              "src": "691:5:90"
            },
            "id": 37513,
            "nodeType": "InheritanceSpecifier",
            "src": "691:5:90"
          }
        ],
        "canonicalName": "MockOwnableAdapter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37799,
          25018,
          37509,
          21332,
          23920
        ],
        "name": "MockOwnableAdapter",
        "nameLocation": "653:18:90",
        "scope": 37800,
        "usedErrors": [
          38664,
          38672,
          38674
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 90
}