{
  "abi": [
    {
      "inputs": [],
      "name": "MaxAssetError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxSharesError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinAssetError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinAssetsOrExcessError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinSharesError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC4626",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minSharesOut",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC4626",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minAssetsOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minExcessOut",
          "type": "uint256"
        }
      ],
      "name": "eject",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "excessBal",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isExcessPTs",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC4626",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAmountIn",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC4626",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC4626",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxSharesOut",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610a8e806100206000396000f3fe6080604052600436106100655760003560e01c806390d250741161004357806390d25074146100fa578063e1f21c671461011a578063f3f094a11461012f57600080fd5b80633c173a4f1461006a5780634b2084e31461009d578063678424c6146100bd575b600080fd5b34801561007657600080fd5b5061008a610085366004610902565b61014f565b6040519081526020015b60405180910390f35b3480156100a957600080fd5b5061008a6100b8366004610902565b61033e565b3480156100c957600080fd5b506100dd6100d836600461094a565b61041d565b604080519384526020840192909252151590820152606001610094565b34801561010657600080fd5b5061008a610115366004610902565b61051a565b61012d61012836600461099c565b610644565b005b34801561013b57600080fd5b5061008a61014a366004610902565b61066a565b600061025f33308773ffffffffffffffffffffffffffffffffffffffff1663b3d7f6b9886040518263ffffffff1660e01b815260040161019191815260200190565b602060405180830381865afa1580156101ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d291906109dd565b8873ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024191906109f6565b73ffffffffffffffffffffffffffffffffffffffff16929190610749565b6040517f94bf804d0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff84811660248301528391908716906394bf804d906044016020604051808303816000875af11580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb91906109dd565b9150811115610336576040517f9e0fc5ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b949350505050565b6040517fb460af940000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff8381166024830152336044830152600091839187169063b460af94906064016020604051808303816000875af11580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e291906109dd565b9150811115610336576040517fac11961300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fc5c3d9100000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff8481166024830152336044830152600091829182919089169063c5c3d910906064016060604051808303816000875af11580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610a1a565b91945092509050848310806104d857508382105b1561050f576040517feb5d961400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b955095509592505050565b600061056d3330868873ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021d573d6000803e3d6000fd5b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff8481166024830152839190871690636e553f65906044016020604051808303816000875af11580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060991906109dd565b9150811015610336576040517fa267cc6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61066573ffffffffffffffffffffffffffffffffffffffff84168383610818565b505050565b6040517fba0876520000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff8381166024830152336044830152600091839187169063ba087652906064016020604051808303816000875af11580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e91906109dd565b9150811015610336576040517f08f6e0aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517f23b872dd000000000000000000000000000000000000000000000000000000006000528460045283602452826044526020600060646000808a5af13d15601f3d1160016000511416171691506000606052806040525080610811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064015b60405180910390fd5b5050505050565b60006040517f095ea7b3000000000000000000000000000000000000000000000000000000006000528360045282602452602060006044600080895af13d15601f3d11600160005114161716915060006060528060405250806108d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610808565b50505050565b73ffffffffffffffffffffffffffffffffffffffff811681146108ff57600080fd5b50565b6000806000806080858703121561091857600080fd5b8435610923816108dd565b935060208501359250604085013561093a816108dd565b9396929550929360600135925050565b600080600080600060a0868803121561096257600080fd5b853561096d816108dd565b9450602086013593506040860135610984816108dd565b94979396509394606081013594506080013592915050565b6000806000606084860312156109b157600080fd5b83356109bc816108dd565b925060208401356109cc816108dd565b929592945050506040919091013590565b6000602082840312156109ef57600080fd5b5051919050565b600060208284031215610a0857600080fd5b8151610a13816108dd565b9392505050565b600080600060608486031215610a2f57600080fd5b835192506020840151915060408401518015158114610a4d57600080fd5b80915050925092509256fea26469706673582212209e8058c837e53c7c978252b5c6f5edd7660ed759ce6697fc324fc8a4be3a433564736f6c634300080d0033",
    "sourceMap": "376:4547:82:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100655760003560e01c806390d250741161004357806390d25074146100fa578063e1f21c671461011a578063f3f094a11461012f57600080fd5b80633c173a4f1461006a5780634b2084e31461009d578063678424c6146100bd575b600080fd5b34801561007657600080fd5b5061008a610085366004610902565b61014f565b6040519081526020015b60405180910390f35b3480156100a957600080fd5b5061008a6100b8366004610902565b61033e565b3480156100c957600080fd5b506100dd6100d836600461094a565b61041d565b604080519384526020840192909252151590820152606001610094565b34801561010657600080fd5b5061008a610115366004610902565b61051a565b61012d61012836600461099c565b610644565b005b34801561013b57600080fd5b5061008a61014a366004610902565b61066a565b600061025f33308773ffffffffffffffffffffffffffffffffffffffff1663b3d7f6b9886040518263ffffffff1660e01b815260040161019191815260200190565b602060405180830381865afa1580156101ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d291906109dd565b8873ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024191906109f6565b73ffffffffffffffffffffffffffffffffffffffff16929190610749565b6040517f94bf804d0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff84811660248301528391908716906394bf804d906044016020604051808303816000875af11580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb91906109dd565b9150811115610336576040517f9e0fc5ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b949350505050565b6040517fb460af940000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff8381166024830152336044830152600091839187169063b460af94906064016020604051808303816000875af11580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e291906109dd565b9150811115610336576040517fac11961300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fc5c3d9100000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff8481166024830152336044830152600091829182919089169063c5c3d910906064016060604051808303816000875af11580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610a1a565b91945092509050848310806104d857508382105b1561050f576040517feb5d961400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b955095509592505050565b600061056d3330868873ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021d573d6000803e3d6000fd5b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff8481166024830152839190871690636e553f65906044016020604051808303816000875af11580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060991906109dd565b9150811015610336576040517fa267cc6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61066573ffffffffffffffffffffffffffffffffffffffff84168383610818565b505050565b6040517fba0876520000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff8381166024830152336044830152600091839187169063ba087652906064016020604051808303816000875af11580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e91906109dd565b9150811015610336576040517f08f6e0aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517f23b872dd000000000000000000000000000000000000000000000000000000006000528460045283602452826044526020600060646000808a5af13d15601f3d1160016000511416171691506000606052806040525080610811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064015b60405180910390fd5b5050505050565b60006040517f095ea7b3000000000000000000000000000000000000000000000000000000006000528360045282602452602060006044600080895af13d15601f3d11600160005114161716915060006060528060405250806108d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610808565b50505050565b73ffffffffffffffffffffffffffffffffffffffff811681146108ff57600080fd5b50565b6000806000806080858703121561091857600080fd5b8435610923816108dd565b935060208501359250604085013561093a816108dd565b9396929550929360600135925050565b600080600080600060a0868803121561096257600080fd5b853561096d816108dd565b9450602086013593506040860135610984816108dd565b94979396509394606081013594506080013592915050565b6000806000606084860312156109b157600080fd5b83356109bc816108dd565b925060208401356109cc816108dd565b929592945050506040919091013590565b6000602082840312156109ef57600080fd5b5051919050565b600060208284031215610a0857600080fd5b8151610a13816108dd565b9392505050565b600080600060608486031215610a2f57600080fd5b835192506020840151915060408401518015158114610a4d57600080fd5b80915050925092509256fea26469706673582212209e8058c837e53c7c978252b5c6f5edd7660ed759ce6697fc324fc8a4be3a433564736f6c634300080d0033",
    "sourceMap": "376:4547:82:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2657:342;;;;;;;;;;-1:-1:-1;2657:342:82;;;;;:::i;:::-;;:::i;:::-;;;893:25:91;;;881:2;866:18;2657:342:82;;;;;;;;2011:263;;;;;;;;;;-1:-1:-1;2011:263:82;;;;;:::i;:::-;;:::i;4370:426::-;;;;;;;;;;-1:-1:-1;4370:426:82;;;;;:::i;:::-;;:::i;:::-;;;;1759:25:91;;;1815:2;1800:18;;1793:34;;;;1870:14;1863:22;1843:18;;;1836:50;1747:2;1732:18;4370:426:82;1563:329:91;3426:332:82;;;;;;;;;;-1:-1:-1;3426:332:82;;;;;:::i;:::-;;:::i;4802:119::-;;;;;;:::i;:::-;;:::i;:::-;;1392:258;;;;;;;;;;-1:-1:-1;1392:258:82;;;;;:::i;:::-;;:::i;2657:342::-;2759:14;2785:91;2823:10;2843:4;2850:5;:17;;;2868:6;2850:25;;;;;;;;;;;;;893::91;;881:2;866:18;;747:177;2850:25:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2791:5;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2785:37;;;:91;;:37;:91::i;:::-;2901:28;;;;;;;;3034:25:91;;;2901:10:82;3095:55:91;;;3075:18;;;3068:83;2933:11:82;;2901:10;;;;;;3007:18:91;;2901:28:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2892:37;;;2891:53;2887:106;;;2967:15;;;;;;;;;;;;;;2887:106;2657:342;;;;;;:::o;2011:263::-;2158:44;;;;;;;;3364:25:91;;;2158:14:82;3486:15:91;;;3466:18;;;3459:43;2191:10:82;3518:18:91;;;3511:43;2118:14:82;;2206:12;;2158:14;;;;;3337:18:91;;2158:44:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2149:53;;;2148:70;2144:124;;;2241:16;;;;;;;;;;;;;;4370:426;4606:62;;;;;;;;3364:25:91;;;4606:32:82;3486:15:91;;;3466:18;;;3459:43;4657:10:82;3518:18:91;;;3511:43;4504:14:82;;;;;;4606:32;;;;;;3337:18:91;;4606:62:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4571:97;;-1:-1:-1;4571:97:82;-1:-1:-1;4571:97:82;-1:-1:-1;4683:21:82;;;;:49;;;4720:12;4708:9;:24;4683:49;4679:111;;;4755:24;;;;;;;;;;;;;;4679:111;4370:426;;;;;;;;;:::o;3426:332::-;3532:14;3558:72;3596:10;3616:4;3623:6;3564:5;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:72;3655:31;;;;;;;;3034:25:91;;;3655:13:82;3095:55:91;;;3075:18;;;3068:83;3690:12:82;;3655:13;;;;;;3007:18:91;;3655:31:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3646:40;;;3645:57;3641:111;;;3725:16;;;;;;;;;;;;;;4802:119;4885:29;:17;;;4903:2;4907:6;4885:17;:29::i;:::-;4802:119;;;:::o;1392:258::-;1537:42;;;;;;;;3364:25:91;;;1537:12:82;3486:15:91;;;3466:18;;;3459:43;1568:10:82;3518:18:91;;;3511:43;1497:14:82;;1583:12;;1537;;;;;3337:18:91;;1537:42:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1528:51;;;1527:68;1523:121;;;1618:15;;;;;;;;;;;;;;1107:1503:62;1245:12;1397:4;1391:11;1523:66;1520:1;1513:77;1613:4;1610:1;1603:15;1673:2;1669;1662:14;1729:6;1725:2;1718:18;2399:2;2396:1;2391:3;2388:1;2385;2378:5;2371;2366:36;2052:16;2045:24;2039:2;2021:16;2018:24;2014:1;2010;2004:8;2001:15;1997:46;1994:76;1794:622;1783:633;;2443:1;2437:4;2430:15;2505:10;2499:4;2492:24;;2571:7;2563:40;;;;;;;4171:2:91;2563:40:62;;;4153:21:91;4210:2;4190:18;;;4183:30;4249:22;4229:18;;;4222:50;4289:18;;2563:40:62;;;;;;;;;1235:1375;1107:1503;;;;:::o;4032:1408::-;4143:12;4295:4;4289:11;4421:66;4418:1;4411:77;4511:2;4508:1;4501:13;4567:6;4563:2;4556:18;5235:2;5232:1;5228:2;5225:1;5222;5215:5;5208;5203:35;4890:16;4883:24;4877:2;4859:16;4856:24;4852:1;4848;4842:8;4839:15;4835:46;4832:76;4632:620;4621:631;;5279:1;5273:4;5266:15;5341:10;5335:4;5328:24;;5407:7;5399:34;;;;;;;4520:2:91;5399:34:62;;;4502:21:91;4559:2;4539:18;;;4532:30;4598:16;4578:18;;;4571:44;4632:18;;5399:34:62;4318:338:91;5399:34:62;4133:1307;4032:1408;;;:::o;14:163:91:-;109:42;102:5;98:54;91:5;88:65;78:93;;167:1;164;157:12;78:93;14:163;:::o;182:560::-;285:6;293;301;309;362:3;350:9;341:7;337:23;333:33;330:53;;;379:1;376;369:12;330:53;418:9;405:23;437:40;471:5;437:40;:::i;:::-;496:5;-1:-1:-1;548:2:91;533:18;;520:32;;-1:-1:-1;604:2:91;589:18;;576:32;617:42;576:32;617:42;:::i;:::-;182:560;;;;-1:-1:-1;678:7:91;;732:2;717:18;704:32;;-1:-1:-1;;182:560:91:o;929:629::-;1041:6;1049;1057;1065;1073;1126:3;1114:9;1105:7;1101:23;1097:33;1094:53;;;1143:1;1140;1133:12;1094:53;1182:9;1169:23;1201:40;1235:5;1201:40;:::i;:::-;1260:5;-1:-1:-1;1312:2:91;1297:18;;1284:32;;-1:-1:-1;1368:2:91;1353:18;;1340:32;1381:42;1340:32;1381:42;:::i;:::-;929:629;;;;-1:-1:-1;1442:7:91;;1496:2;1481:18;;1468:32;;-1:-1:-1;1547:3:91;1532:19;1519:33;;929:629;-1:-1:-1;;929:629:91:o;1897:489::-;1989:6;1997;2005;2058:2;2046:9;2037:7;2033:23;2029:32;2026:52;;;2074:1;2071;2064:12;2026:52;2113:9;2100:23;2132:40;2166:5;2132:40;:::i;:::-;2191:5;-1:-1:-1;2248:2:91;2233:18;;2220:32;2261:42;2220:32;2261:42;:::i;:::-;1897:489;;2322:7;;-1:-1:-1;;;2376:2:91;2361:18;;;;2348:32;;1897:489::o;2391:184::-;2461:6;2514:2;2502:9;2493:7;2489:23;2485:32;2482:52;;;2530:1;2527;2520:12;2482:52;-1:-1:-1;2553:16:91;;2391:184;-1:-1:-1;2391:184:91:o;2580:275::-;2665:6;2718:2;2706:9;2697:7;2693:23;2689:32;2686:52;;;2734:1;2731;2724:12;2686:52;2766:9;2760:16;2785:40;2819:5;2785:40;:::i;:::-;2844:5;2580:275;-1:-1:-1;;;2580:275:91:o;3565:399::-;3650:6;3658;3666;3719:2;3707:9;3698:7;3694:23;3690:32;3687:52;;;3735:1;3732;3725:12;3687:52;3764:9;3758:16;3748:26;;3814:2;3803:9;3799:18;3793:25;3783:35;;3861:2;3850:9;3846:18;3840:25;3908:5;3901:13;3894:21;3887:5;3884:32;3874:60;;3930:1;3927;3920:12;3874:60;3953:5;3943:15;;;3565:399;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,address,uint256)": "e1f21c67",
    "deposit(address,uint256,address,uint256)": "90d25074",
    "eject(address,uint256,address,uint256,uint256)": "678424c6",
    "mint(address,uint256,address,uint256)": "3c173a4f",
    "redeem(address,uint256,address,uint256)": "f3f094a1",
    "withdraw(address,uint256,address,uint256)": "4b2084e3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MaxAssetError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSharesError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinAssetError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinAssetsOrExcessError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinSharesError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC4626\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minSharesOut\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC4626\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAssetsOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minExcessOut\",\"type\":\"uint256\"}],\"name\":\"eject\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"excessBal\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isExcessPTs\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC4626\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC4626\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC4626\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSharesOut\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256,address,uint256)\":{\"params\":{\"assets\":\"Amount of asset pulled from msg.sender and used to mint vault shares\",\"minSharesOut\":\"Minimum amount of returned shares\",\"receiver\":\"Destination address for the returned shares\",\"vault\":\"ERC4626 vault\"},\"returns\":{\"shares\":\"Number of shares minted by the vault and returned to msg.sender\"}},\"eject(address,uint256,address,uint256,uint256)\":{\"params\":{\"minAssetsOut\":\"Minimum amount of assets returned\",\"minExcessOut\":\"Minimum excess PT/YT returned \",\"receiver\":\"Destination address for the constituent assets.\",\"shares\":\"Number of shares to eject with.\",\"vault\":\"ERC4626 vault.\"},\"returns\":{\"assets\":\"Amount of asset redeemable by the given number of shares.\",\"excessBal\":\"Amount of excess PT or YT redeemable by the given number of shares.\",\"isExcessPTs\":\"Whether the excess token is a YT or PT.\"}},\"mint(address,uint256,address,uint256)\":{\"params\":{\"maxAmountIn\":\"Maximum amount of assets pulled from msg.sender\",\"receiver\":\"Destination address for the returned shares\",\"shares\":\"Number of shares to mint\",\"vault\":\"ERC4626 vault\"},\"returns\":{\"assets\":\"Amount of asset pulled from msg.sender and used to mint vault shares\"}},\"redeem(address,uint256,address,uint256)\":{\"params\":{\"minAmountOut\":\"Minimum amount of assets returned\",\"receiver\":\"Destination address for the returned assets\",\"shares\":\"Number of shares to redeem\",\"vault\":\"ERC4626 vault\"},\"returns\":{\"assets\":\"Amount of asset redeemable by the given number of shares\"}},\"withdraw(address,uint256,address,uint256)\":{\"params\":{\"assets\":\"Amount of asset requested for withdrawal\",\"maxSharesOut\":\"Maximum amount of shares burned\",\"receiver\":\"Destination address for the returned assets\",\"vault\":\"ERC4626 vault\"},\"returns\":{\"shares\":\"Number of shares to redeem\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"MaxAssetError()\":[{\"notice\":\"thrown when amount of assets received is above the max set by caller.\"}],\"MaxSharesError()\":[{\"notice\":\"thrown when amount of shares received is above the max set by caller.\"}],\"MinAssetError()\":[{\"notice\":\"thrown when amount of assets received is below the min set by caller.\"}],\"MinAssetsOrExcessError()\":[{\"notice\":\"thrown when amount of assets or excess received is below the max set by caller.\"}],\"MinSharesError()\":[{\"notice\":\"thrown when amount of shares received is below the min set by caller.\"}]},\"kind\":\"user\",\"methods\":{\"deposit(address,uint256,address,uint256)\":{\"notice\":\"Deposit underlying asset into vault with slippage protection \"},\"eject(address,uint256,address,uint256,uint256)\":{\"notice\":\"Quick exit into the constituent assets with slippage protection\"},\"mint(address,uint256,address,uint256)\":{\"notice\":\"Mint vault shares with slippage protection \"},\"redeem(address,uint256,address,uint256)\":{\"notice\":\"Redeem vault shares with slippage protection \"},\"withdraw(address,uint256,address,uint256)\":{\"notice\":\"Withdraw underlying asset from vault with slippage protection \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RollerPeriphery.sol\":\"RollerPeriphery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@balancer-labs/=lib/sense-v1/node_modules/@balancer-labs/\",\":@balancer-labs/v2-pool-utils/=lib/space-v1/lib/balancer-v2-monorepo/pkg/pool-utils/\",\":@balancer-labs/v2-solidity-utils/=lib/space-v1/lib/balancer-v2-monorepo/pkg/solidity-utils/\",\":@balancer-labs/v2-vault/=lib/space-v1/lib/balancer-v2-monorepo/pkg/vault/\",\":@openzeppelin/=lib/sense-v1/node_modules/@openzeppelin/\",\":@openzeppelin/contracts/=lib/sense-v1/node_modules/@openzeppelin/contracts/\",\":@rari-capital/=lib/sense-v1/node_modules/@rari-capital/\",\":@sense-finance/=lib/sense-v1/node_modules/@sense-finance/\",\":@sense-finance/v1-core/=lib/space-v1/lib/sense-v1/pkg/core/\",\":@sense-finance/v1-utils/=lib/space-v1/lib/sense-v1/pkg/utils/\",\":balancer-v2-monorepo/=lib/space-v1/lib/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=lib/sense-v1/node_modules/hardhat-deploy/\",\":hardhat/=lib/sense-v1/node_modules/hardhat/\",\":prettier-plugin-solidity/=lib/sense-v1/node_modules/prettier-plugin-solidity/\",\":sense-v1-core/=lib/sense-v1/pkg/core/src/\",\":sense-v1-utils/=lib/sense-v1/pkg/utils/src/\",\":sense-v1/=lib/sense-v1/pkg/core/src/\",\":solmate/=lib/solmate/src/\",\":space-v1/=lib/space-v1/src/\"]},\"sources\":{\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa0e0c28a727524fa94e7e6c1f4c793a6bd1e6d1bc652b7b02b343ebaf4cd774b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dca20fc42d20ce7b6023fafd744dc7e91ed2d1f6c5f1fb45e3004b1d5f33100\",\"dweb:/ipfs/Qmf7MtQTTSJYEhsJ3HDmegt4PFSG13msyFAv4DFAoqyypa\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58\",\"dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x0bf1d4f3999a4471e0fded0a2f67e7fe328e2a27385348571b1fc0a8d9c9f62e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737232ccd46bfbe6f34a3e5bc24c345777da47e6ea27bcc46d2c3931883c2257\",\"dweb:/ipfs/QmeA6ikG9dQKZgkJYUVGXcApuCii34h7qtmguToRdSU3qZ\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x5f2e1158c68c1f3d15b80e8a7dd92b6849f873066969562ad33c0abb80e536ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c829a9d77ae852541d7ed1492cad93c371907f45b8f85134683b76ec62d4969\",\"dweb:/ipfs/QmX5dry5ofeGfGaC8GpDyCx3RHYf3CFpVftc517PVkuRSL\"]},\"src/AutoRoller.sol\":{\"keccak256\":\"0xb776e186a90f3b757462965d3fb41f574addefff9f61beaccec0695b182ae686\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88b053038397fd7dd7e5e2b005acb6296cc79f98578393485abcdfe833dc6e46\",\"dweb:/ipfs/QmRcDiVzuM2XuLJMfpFBLgTSBeKUEca7ShtCdN7PrHtdeB\"]},\"src/RollerPeriphery.sol\":{\"keccak256\":\"0xe82727b15c26639ebdced7192692b1da0429e72aed13481194c1e8de879d6b8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d9d3528e0e06942ed30dd684de77b8f949bf389663e5d3aedcecbcef22f10019\",\"dweb:/ipfs/QmcRTXL7VjTdfuzNamvVnNQVZDRFK8ABsMrY82qyYyzhFT\"]},\"src/SafeCast.sol\":{\"keccak256\":\"0x48479793f4bca68ab9f72602f6b7140f45f2120eacf262e4e1145afb204418ec\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e99a415c822ea26e2d209244e5f420a6ead8653625649addc029ccfa73179478\",\"dweb:/ipfs/QmTKrZZ7DGxiumiwEPahkgJqX6nocTS8LwAfQDVS3Ri2Xs\"]},\"src/external/DateTime.sol\":{\"keccak256\":\"0x84172927f6182fe1969c80e10f5427bff955814a5ef0fd3df821f6fb1bc09eb0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ae0b60f8a8676783e1248a46ce120bbd56a6cba280f27d89f80755b19c56d596\",\"dweb:/ipfs/QmPSFeyVHj9VetaBaSRZwgjeruJbPEegUNUATtcss9uTpr\"]},\"src/interfaces/BalancerVault.sol\":{\"keccak256\":\"0x8648fd61484a815f171ed3f87801aca6cc2126c980a422a7e766f4c59e39bb9e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7c3a3ed0436a26d63d81171be42e5e4d2fc95d747715bce892b747d8b3201828\",\"dweb:/ipfs/QmT9JjSyBDhofAXPjsgEmDSym6B9zvknu6bV25s3e5JAE7\"]},\"src/interfaces/Space.sol\":{\"keccak256\":\"0xf345bbd19641868c94933e7de2347295ef8aae4a8c4bd26357b998e73db66e2e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4afccfc1b518fb57c244cb9e93354cdf37c15fbff5890da91259da6c1c00f872\",\"dweb:/ipfs/QmTMqrCyG4ie25h8PGt6dmWYD5SYYhoLBsVUXCWmjF7KTs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "MaxAssetError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxSharesError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MinAssetError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MinAssetsOrExcessError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MinSharesError"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC4626",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minSharesOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC4626",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minAssetsOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minExcessOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "eject",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "excessBal",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isExcessPTs",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC4626",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmountIn",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC4626",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC4626",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxSharesOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(address,uint256,address,uint256)": {
            "params": {
              "assets": "Amount of asset pulled from msg.sender and used to mint vault shares",
              "minSharesOut": "Minimum amount of returned shares",
              "receiver": "Destination address for the returned shares",
              "vault": "ERC4626 vault"
            },
            "returns": {
              "shares": "Number of shares minted by the vault and returned to msg.sender"
            }
          },
          "eject(address,uint256,address,uint256,uint256)": {
            "params": {
              "minAssetsOut": "Minimum amount of assets returned",
              "minExcessOut": "Minimum excess PT/YT returned ",
              "receiver": "Destination address for the constituent assets.",
              "shares": "Number of shares to eject with.",
              "vault": "ERC4626 vault."
            },
            "returns": {
              "assets": "Amount of asset redeemable by the given number of shares.",
              "excessBal": "Amount of excess PT or YT redeemable by the given number of shares.",
              "isExcessPTs": "Whether the excess token is a YT or PT."
            }
          },
          "mint(address,uint256,address,uint256)": {
            "params": {
              "maxAmountIn": "Maximum amount of assets pulled from msg.sender",
              "receiver": "Destination address for the returned shares",
              "shares": "Number of shares to mint",
              "vault": "ERC4626 vault"
            },
            "returns": {
              "assets": "Amount of asset pulled from msg.sender and used to mint vault shares"
            }
          },
          "redeem(address,uint256,address,uint256)": {
            "params": {
              "minAmountOut": "Minimum amount of assets returned",
              "receiver": "Destination address for the returned assets",
              "shares": "Number of shares to redeem",
              "vault": "ERC4626 vault"
            },
            "returns": {
              "assets": "Amount of asset redeemable by the given number of shares"
            }
          },
          "withdraw(address,uint256,address,uint256)": {
            "params": {
              "assets": "Amount of asset requested for withdrawal",
              "maxSharesOut": "Maximum amount of shares burned",
              "receiver": "Destination address for the returned assets",
              "vault": "ERC4626 vault"
            },
            "returns": {
              "shares": "Number of shares to redeem"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deposit(address,uint256,address,uint256)": {
            "notice": "Deposit underlying asset into vault with slippage protection "
          },
          "eject(address,uint256,address,uint256,uint256)": {
            "notice": "Quick exit into the constituent assets with slippage protection"
          },
          "mint(address,uint256,address,uint256)": {
            "notice": "Mint vault shares with slippage protection "
          },
          "redeem(address,uint256,address,uint256)": {
            "notice": "Redeem vault shares with slippage protection "
          },
          "withdraw(address,uint256,address,uint256)": {
            "notice": "Withdraw underlying asset from vault with slippage protection "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@balancer-labs/=lib/sense-v1/node_modules/@balancer-labs/",
        ":@balancer-labs/v2-pool-utils/=lib/space-v1/lib/balancer-v2-monorepo/pkg/pool-utils/",
        ":@balancer-labs/v2-solidity-utils/=lib/space-v1/lib/balancer-v2-monorepo/pkg/solidity-utils/",
        ":@balancer-labs/v2-vault/=lib/space-v1/lib/balancer-v2-monorepo/pkg/vault/",
        ":@openzeppelin/=lib/sense-v1/node_modules/@openzeppelin/",
        ":@openzeppelin/contracts/=lib/sense-v1/node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=lib/sense-v1/node_modules/@rari-capital/",
        ":@sense-finance/=lib/sense-v1/node_modules/@sense-finance/",
        ":@sense-finance/v1-core/=lib/space-v1/lib/sense-v1/pkg/core/",
        ":@sense-finance/v1-utils/=lib/space-v1/lib/sense-v1/pkg/utils/",
        ":balancer-v2-monorepo/=lib/space-v1/lib/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=lib/sense-v1/node_modules/hardhat-deploy/",
        ":hardhat/=lib/sense-v1/node_modules/hardhat/",
        ":prettier-plugin-solidity/=lib/sense-v1/node_modules/prettier-plugin-solidity/",
        ":sense-v1-core/=lib/sense-v1/pkg/core/src/",
        ":sense-v1-utils/=lib/sense-v1/pkg/utils/src/",
        ":sense-v1/=lib/sense-v1/pkg/core/src/",
        ":solmate/=lib/solmate/src/",
        ":space-v1/=lib/space-v1/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/RollerPeriphery.sol": "RollerPeriphery"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/mixins/ERC4626.sol": {
        "keccak256": "0xa0e0c28a727524fa94e7e6c1f4c793a6bd1e6d1bc652b7b02b343ebaf4cd774b",
        "urls": [
          "bzz-raw://1dca20fc42d20ce7b6023fafd744dc7e91ed2d1f6c5f1fb45e3004b1d5f33100",
          "dweb:/ipfs/Qmf7MtQTTSJYEhsJ3HDmegt4PFSG13msyFAv4DFAoqyypa"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69",
        "urls": [
          "bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58",
          "dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x0bf1d4f3999a4471e0fded0a2f67e7fe328e2a27385348571b1fc0a8d9c9f62e",
        "urls": [
          "bzz-raw://737232ccd46bfbe6f34a3e5bc24c345777da47e6ea27bcc46d2c3931883c2257",
          "dweb:/ipfs/QmeA6ikG9dQKZgkJYUVGXcApuCii34h7qtmguToRdSU3qZ"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x5f2e1158c68c1f3d15b80e8a7dd92b6849f873066969562ad33c0abb80e536ff",
        "urls": [
          "bzz-raw://8c829a9d77ae852541d7ed1492cad93c371907f45b8f85134683b76ec62d4969",
          "dweb:/ipfs/QmX5dry5ofeGfGaC8GpDyCx3RHYf3CFpVftc517PVkuRSL"
        ],
        "license": "MIT"
      },
      "src/AutoRoller.sol": {
        "keccak256": "0xb776e186a90f3b757462965d3fb41f574addefff9f61beaccec0695b182ae686",
        "urls": [
          "bzz-raw://88b053038397fd7dd7e5e2b005acb6296cc79f98578393485abcdfe833dc6e46",
          "dweb:/ipfs/QmRcDiVzuM2XuLJMfpFBLgTSBeKUEca7ShtCdN7PrHtdeB"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/RollerPeriphery.sol": {
        "keccak256": "0xe82727b15c26639ebdced7192692b1da0429e72aed13481194c1e8de879d6b8a",
        "urls": [
          "bzz-raw://d9d3528e0e06942ed30dd684de77b8f949bf389663e5d3aedcecbcef22f10019",
          "dweb:/ipfs/QmcRTXL7VjTdfuzNamvVnNQVZDRFK8ABsMrY82qyYyzhFT"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/SafeCast.sol": {
        "keccak256": "0x48479793f4bca68ab9f72602f6b7140f45f2120eacf262e4e1145afb204418ec",
        "urls": [
          "bzz-raw://e99a415c822ea26e2d209244e5f420a6ead8653625649addc029ccfa73179478",
          "dweb:/ipfs/QmTKrZZ7DGxiumiwEPahkgJqX6nocTS8LwAfQDVS3Ri2Xs"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/DateTime.sol": {
        "keccak256": "0x84172927f6182fe1969c80e10f5427bff955814a5ef0fd3df821f6fb1bc09eb0",
        "urls": [
          "bzz-raw://ae0b60f8a8676783e1248a46ce120bbd56a6cba280f27d89f80755b19c56d596",
          "dweb:/ipfs/QmPSFeyVHj9VetaBaSRZwgjeruJbPEegUNUATtcss9uTpr"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/BalancerVault.sol": {
        "keccak256": "0x8648fd61484a815f171ed3f87801aca6cc2126c980a422a7e766f4c59e39bb9e",
        "urls": [
          "bzz-raw://7c3a3ed0436a26d63d81171be42e5e4d2fc95d747715bce892b747d8b3201828",
          "dweb:/ipfs/QmT9JjSyBDhofAXPjsgEmDSym6B9zvknu6bV25s3e5JAE7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/Space.sol": {
        "keccak256": "0xf345bbd19641868c94933e7de2347295ef8aae4a8c4bd26357b998e73db66e2e",
        "urls": [
          "bzz-raw://4afccfc1b518fb57c244cb9e93354cdf37c15fbff5890da91259da6c1c00f872",
          "dweb:/ipfs/QmTMqrCyG4ie25h8PGt6dmWYD5SYYhoLBsVUXCWmjF7KTs"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/RollerPeriphery.sol",
    "id": 31621,
    "exportedSymbols": {
      "AutoRoller": [
        30551
      ],
      "ERC20": [
        26855
      ],
      "ERC4626": [
        25660
      ],
      "RollerPeriphery": [
        31620
      ],
      "SafeTransferLib": [
        27618
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:4881:82",
    "nodes": [
      {
        "id": 31361,
        "nodeType": "PragmaDirective",
        "src": "42:23:82",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 31363,
        "nodeType": "ImportDirective",
        "src": "67:49:82",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31621,
        "sourceUnit": 26856,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31362,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26855,
              "src": "76:5:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31365,
        "nodeType": "ImportDirective",
        "src": "117:53:82",
        "nodes": [],
        "absolutePath": "lib/solmate/src/mixins/ERC4626.sol",
        "file": "solmate/mixins/ERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31621,
        "sourceUnit": 25661,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31364,
              "name": "ERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25660,
              "src": "126:7:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31367,
        "nodeType": "ImportDirective",
        "src": "171:68:82",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31621,
        "sourceUnit": 27619,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31366,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27618,
              "src": "180:15:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31369,
        "nodeType": "ImportDirective",
        "src": "241:46:82",
        "nodes": [],
        "absolutePath": "src/AutoRoller.sol",
        "file": "./AutoRoller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31621,
        "sourceUnit": 30780,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31368,
              "name": "AutoRoller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30551,
              "src": "250:10:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31620,
        "nodeType": "ContractDefinition",
        "src": "376:4547:82",
        "nodes": [
          {
            "id": 31373,
            "nodeType": "UsingForDirective",
            "src": "407:32:82",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 31370,
              "name": "SafeTransferLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27618,
              "src": "413:15:82"
            },
            "typeName": {
              "id": 31372,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31371,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26855,
                "src": "433:5:82"
              },
              "referencedDeclaration": 26855,
              "src": "433:5:82",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$26855",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 31376,
            "nodeType": "ErrorDefinition",
            "src": "531:22:82",
            "nodes": [],
            "documentation": {
              "id": 31374,
              "nodeType": "StructuredDocumentation",
              "src": "445:81:82",
              "text": "@notice thrown when amount of assets received is below the min set by caller."
            },
            "errorSelector": "08f6e0aa",
            "name": "MinAssetError",
            "nameLocation": "537:13:82",
            "parameters": {
              "id": 31375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "550:2:82"
            }
          },
          {
            "id": 31379,
            "nodeType": "ErrorDefinition",
            "src": "645:23:82",
            "nodes": [],
            "documentation": {
              "id": 31377,
              "nodeType": "StructuredDocumentation",
              "src": "559:81:82",
              "text": "@notice thrown when amount of shares received is below the min set by caller."
            },
            "errorSelector": "a267cc60",
            "name": "MinSharesError",
            "nameLocation": "651:14:82",
            "parameters": {
              "id": 31378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:2:82"
            }
          },
          {
            "id": 31382,
            "nodeType": "ErrorDefinition",
            "src": "760:22:82",
            "nodes": [],
            "documentation": {
              "id": 31380,
              "nodeType": "StructuredDocumentation",
              "src": "674:81:82",
              "text": "@notice thrown when amount of assets received is above the max set by caller."
            },
            "errorSelector": "9e0fc5ff",
            "name": "MaxAssetError",
            "nameLocation": "766:13:82",
            "parameters": {
              "id": 31381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:2:82"
            }
          },
          {
            "id": 31385,
            "nodeType": "ErrorDefinition",
            "src": "874:23:82",
            "nodes": [],
            "documentation": {
              "id": 31383,
              "nodeType": "StructuredDocumentation",
              "src": "788:81:82",
              "text": "@notice thrown when amount of shares received is above the max set by caller."
            },
            "errorSelector": "ac119613",
            "name": "MaxSharesError",
            "nameLocation": "880:14:82",
            "parameters": {
              "id": 31384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:2:82"
            }
          },
          {
            "id": 31388,
            "nodeType": "ErrorDefinition",
            "src": "999:31:82",
            "nodes": [],
            "documentation": {
              "id": 31386,
              "nodeType": "StructuredDocumentation",
              "src": "903:91:82",
              "text": "@notice thrown when amount of assets or excess received is below the max set by caller."
            },
            "errorSelector": "eb5d9614",
            "name": "MinAssetsOrExcessError",
            "nameLocation": "1005:22:82",
            "parameters": {
              "id": 31387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1027:2:82"
            }
          },
          {
            "id": 31421,
            "nodeType": "FunctionDefinition",
            "src": "1392:258:82",
            "nodes": [],
            "body": {
              "id": 31420,
              "nodeType": "Block",
              "src": "1513:137:82",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "id": 31411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 31403,
                            "name": "assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31401,
                            "src": "1528:6:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 31406,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31394,
                                "src": "1550:6:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 31407,
                                "name": "receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31396,
                                "src": "1558:8:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 31408,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1568:3:82",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 31409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1568:10:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 31404,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31392,
                                "src": "1537:5:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC4626_$25660",
                                  "typeString": "contract ERC4626"
                                }
                              },
                              "id": 31405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "redeem",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25464,
                              "src": "1537:12:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,address) external returns (uint256)"
                              }
                            },
                            "id": 31410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1537:42:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1528:51:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 31412,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1527:53:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 31413,
                      "name": "minAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31398,
                      "src": "1583:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1527:68:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31419,
                  "nodeType": "IfStatement",
                  "src": "1523:121:82",
                  "trueBody": {
                    "id": 31418,
                    "nodeType": "Block",
                    "src": "1597:47:82",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31415,
                            "name": "MinAssetError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31376,
                            "src": "1618:13:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 31416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1618:15:82",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31417,
                        "nodeType": "RevertStatement",
                        "src": "1611:22:82"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 31389,
              "nodeType": "StructuredDocumentation",
              "src": "1036:351:82",
              "text": "@notice Redeem vault shares with slippage protection \n @param vault ERC4626 vault\n @param shares Number of shares to redeem\n @param receiver Destination address for the returned assets\n @param minAmountOut Minimum amount of assets returned\n @return assets Amount of asset redeemable by the given number of shares"
            },
            "functionSelector": "f3f094a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "1401:6:82",
            "parameters": {
              "id": 31399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31392,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1416:5:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31421,
                  "src": "1408:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC4626_$25660",
                    "typeString": "contract ERC4626"
                  },
                  "typeName": {
                    "id": 31391,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31390,
                      "name": "ERC4626",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25660,
                      "src": "1408:7:82"
                    },
                    "referencedDeclaration": 25660,
                    "src": "1408:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC4626_$25660",
                      "typeString": "contract ERC4626"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31394,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1431:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31421,
                  "src": "1423:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31396,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1447:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31421,
                  "src": "1439:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31398,
                  "mutability": "mutable",
                  "name": "minAmountOut",
                  "nameLocation": "1465:12:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31421,
                  "src": "1457:20:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1407:71:82"
            },
            "returnParameters": {
              "id": 31402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31401,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1505:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31421,
                  "src": "1497:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:16:82"
            },
            "scope": 31620,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31454,
            "nodeType": "FunctionDefinition",
            "src": "2011:263:82",
            "nodes": [],
            "body": {
              "id": 31453,
              "nodeType": "Block",
              "src": "2134:140:82",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "id": 31444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 31436,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31434,
                            "src": "2149:6:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 31439,
                                "name": "assets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31427,
                                "src": "2173:6:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 31440,
                                "name": "receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31429,
                                "src": "2181:8:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 31441,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2191:3:82",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 31442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2191:10:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 31437,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31425,
                                "src": "2158:5:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC4626_$25660",
                                  "typeString": "contract ERC4626"
                                }
                              },
                              "id": 31438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25380,
                              "src": "2158:14:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,address) external returns (uint256)"
                              }
                            },
                            "id": 31443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2158:44:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2149:53:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 31445,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2148:55:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 31446,
                      "name": "maxSharesOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31431,
                      "src": "2206:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2148:70:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31452,
                  "nodeType": "IfStatement",
                  "src": "2144:124:82",
                  "trueBody": {
                    "id": 31451,
                    "nodeType": "Block",
                    "src": "2220:48:82",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31448,
                            "name": "MaxSharesError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31385,
                            "src": "2241:14:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 31449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2241:16:82",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31450,
                        "nodeType": "RevertStatement",
                        "src": "2234:23:82"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 31422,
              "nodeType": "StructuredDocumentation",
              "src": "1656:350:82",
              "text": "@notice Withdraw underlying asset from vault with slippage protection \n @param vault ERC4626 vault\n @param assets Amount of asset requested for withdrawal\n @param receiver Destination address for the returned assets\n @param maxSharesOut Maximum amount of shares burned\n @return shares Number of shares to redeem"
            },
            "functionSelector": "4b2084e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2020:8:82",
            "parameters": {
              "id": 31432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31425,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2037:5:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31454,
                  "src": "2029:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC4626_$25660",
                    "typeString": "contract ERC4626"
                  },
                  "typeName": {
                    "id": 31424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31423,
                      "name": "ERC4626",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25660,
                      "src": "2029:7:82"
                    },
                    "referencedDeclaration": 25660,
                    "src": "2029:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC4626_$25660",
                      "typeString": "contract ERC4626"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31427,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "2052:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31454,
                  "src": "2044:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2044:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31429,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2068:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31454,
                  "src": "2060:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31431,
                  "mutability": "mutable",
                  "name": "maxSharesOut",
                  "nameLocation": "2086:12:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31454,
                  "src": "2078:20:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2028:71:82"
            },
            "returnParameters": {
              "id": 31435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31434,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "2126:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31454,
                  "src": "2118:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2118:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2117:16:82"
            },
            "scope": 31620,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31503,
            "nodeType": "FunctionDefinition",
            "src": "2657:342:82",
            "nodes": [],
            "body": {
              "id": 31502,
              "nodeType": "Block",
              "src": "2775:224:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31475,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2823:3:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2823:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31479,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2843:4:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RollerPeriphery_$31620",
                              "typeString": "contract RollerPeriphery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RollerPeriphery_$31620",
                              "typeString": "contract RollerPeriphery"
                            }
                          ],
                          "id": 31478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2835:7:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31477,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2835:7:82",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2835:13:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31483,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31460,
                            "src": "2868:6:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31481,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31458,
                            "src": "2850:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC4626_$25660",
                              "typeString": "contract ERC4626"
                            }
                          },
                          "id": 31482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "previewMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25553,
                          "src": "2850:17:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 31484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2850:25:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31470,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31458,
                                "src": "2791:5:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC4626_$25660",
                                  "typeString": "contract ERC4626"
                                }
                              },
                              "id": 31471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "asset",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25182,
                              "src": "2791:11:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$26855_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 31472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2791:13:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$26855",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$26855",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 31469,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26855,
                          "src": "2785:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$26855_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 31473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2785:20:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$26855",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 31474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27577,
                      "src": "2785:37:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$26855_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$26855_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 31485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2785:91:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31486,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:91:82"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "id": 31493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 31487,
                            "name": "assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31467,
                            "src": "2892:6:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 31490,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31460,
                                "src": "2912:6:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 31491,
                                "name": "receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31462,
                                "src": "2920:8:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 31488,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31458,
                                "src": "2901:5:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC4626_$25660",
                                  "typeString": "contract ERC4626"
                                }
                              },
                              "id": 31489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25302,
                              "src": "2901:10:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 31492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2901:28:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2892:37:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 31494,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2891:39:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 31495,
                      "name": "maxAmountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31464,
                      "src": "2933:11:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2891:53:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31501,
                  "nodeType": "IfStatement",
                  "src": "2887:106:82",
                  "trueBody": {
                    "id": 31500,
                    "nodeType": "Block",
                    "src": "2946:47:82",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31497,
                            "name": "MaxAssetError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31382,
                            "src": "2967:13:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 31498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2967:15:82",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31499,
                        "nodeType": "RevertStatement",
                        "src": "2960:22:82"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 31455,
              "nodeType": "StructuredDocumentation",
              "src": "2280:372:82",
              "text": "@notice Mint vault shares with slippage protection \n @param vault ERC4626 vault\n @param shares Number of shares to mint\n @param receiver Destination address for the returned shares\n @param maxAmountIn Maximum amount of assets pulled from msg.sender\n @return assets Amount of asset pulled from msg.sender and used to mint vault shares"
            },
            "functionSelector": "3c173a4f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2666:4:82",
            "parameters": {
              "id": 31465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31458,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2679:5:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31503,
                  "src": "2671:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC4626_$25660",
                    "typeString": "contract ERC4626"
                  },
                  "typeName": {
                    "id": 31457,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31456,
                      "name": "ERC4626",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25660,
                      "src": "2671:7:82"
                    },
                    "referencedDeclaration": 25660,
                    "src": "2671:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC4626_$25660",
                      "typeString": "contract ERC4626"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31460,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "2694:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31503,
                  "src": "2686:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2686:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31462,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2710:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31503,
                  "src": "2702:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31464,
                  "mutability": "mutable",
                  "name": "maxAmountIn",
                  "nameLocation": "2728:11:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31503,
                  "src": "2720:19:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2670:70:82"
            },
            "returnParameters": {
              "id": 31468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31467,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "2767:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31503,
                  "src": "2759:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2758:16:82"
            },
            "scope": 31620,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31549,
            "nodeType": "FunctionDefinition",
            "src": "3426:332:82",
            "nodes": [],
            "body": {
              "id": 31548,
              "nodeType": "Block",
              "src": "3548:210:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31524,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3596:3:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3596:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31528,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3616:4:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RollerPeriphery_$31620",
                              "typeString": "contract RollerPeriphery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RollerPeriphery_$31620",
                              "typeString": "contract RollerPeriphery"
                            }
                          ],
                          "id": 31527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3608:7:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31526,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3608:7:82",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3608:13:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31530,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31509,
                        "src": "3623:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31519,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31507,
                                "src": "3564:5:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC4626_$25660",
                                  "typeString": "contract ERC4626"
                                }
                              },
                              "id": 31520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "asset",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25182,
                              "src": "3564:11:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$26855_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 31521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3564:13:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$26855",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$26855",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 31518,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26855,
                          "src": "3558:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$26855_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 31522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3558:20:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$26855",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 31523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27577,
                      "src": "3558:37:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$26855_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$26855_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 31531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3558:72:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31532,
                  "nodeType": "ExpressionStatement",
                  "src": "3558:72:82"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "id": 31539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 31533,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31516,
                            "src": "3646:6:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 31536,
                                "name": "assets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31509,
                                "src": "3669:6:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 31537,
                                "name": "receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31511,
                                "src": "3677:8:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 31534,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31507,
                                "src": "3655:5:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC4626_$25660",
                                  "typeString": "contract ERC4626"
                                }
                              },
                              "id": 31535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25256,
                              "src": "3655:13:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 31538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3655:31:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3646:40:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 31540,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3645:42:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 31541,
                      "name": "minSharesOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31513,
                      "src": "3690:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3645:57:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31547,
                  "nodeType": "IfStatement",
                  "src": "3641:111:82",
                  "trueBody": {
                    "id": 31546,
                    "nodeType": "Block",
                    "src": "3704:48:82",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31543,
                            "name": "MinSharesError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31379,
                            "src": "3725:14:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 31544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3725:16:82",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31545,
                        "nodeType": "RevertStatement",
                        "src": "3718:23:82"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 31504,
              "nodeType": "StructuredDocumentation",
              "src": "3005:416:82",
              "text": "@notice Deposit underlying asset into vault with slippage protection \n @param vault ERC4626 vault\n @param assets Amount of asset pulled from msg.sender and used to mint vault shares\n @param receiver Destination address for the returned shares\n @param minSharesOut Minimum amount of returned shares\n @return shares Number of shares minted by the vault and returned to msg.sender"
            },
            "functionSelector": "90d25074",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3435:7:82",
            "parameters": {
              "id": 31514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31507,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "3451:5:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31549,
                  "src": "3443:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC4626_$25660",
                    "typeString": "contract ERC4626"
                  },
                  "typeName": {
                    "id": 31506,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31505,
                      "name": "ERC4626",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25660,
                      "src": "3443:7:82"
                    },
                    "referencedDeclaration": 25660,
                    "src": "3443:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC4626_$25660",
                      "typeString": "contract ERC4626"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31509,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3466:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31549,
                  "src": "3458:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31511,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3482:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31549,
                  "src": "3474:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3474:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31513,
                  "mutability": "mutable",
                  "name": "minSharesOut",
                  "nameLocation": "3500:12:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31549,
                  "src": "3492:20:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3442:71:82"
            },
            "returnParameters": {
              "id": 31517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31516,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "3540:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31549,
                  "src": "3532:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3532:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3531:16:82"
            },
            "scope": 31620,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31601,
            "nodeType": "FunctionDefinition",
            "src": "4370:426:82",
            "nodes": [],
            "body": {
              "id": 31600,
              "nodeType": "Block",
              "src": "4561:235:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 31570,
                          "name": "assets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31564,
                          "src": "4572:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 31571,
                          "name": "excessBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31566,
                          "src": "4580:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 31572,
                          "name": "isExcessPTs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31568,
                          "src": "4591:11:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 31573,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4571:32:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "tuple(uint256,uint256,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31581,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31555,
                          "src": "4639:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 31582,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31557,
                          "src": "4647:8:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 31583,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4657:3:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4657:10:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 31577,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31553,
                                  "src": "4625:5:82",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC4626_$25660",
                                    "typeString": "contract ERC4626"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC4626_$25660",
                                    "typeString": "contract ERC4626"
                                  }
                                ],
                                "id": 31576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4617:7:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 31575,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4617:7:82",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 31578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4617:14:82",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31574,
                            "name": "AutoRoller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30551,
                            "src": "4606:10:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AutoRoller_$30551_$",
                              "typeString": "type(contract AutoRoller)"
                            }
                          },
                          "id": 31579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4606:26:82",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AutoRoller_$30551",
                            "typeString": "contract AutoRoller"
                          }
                        },
                        "id": 31580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "eject",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29872,
                        "src": "4606:32:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_bool_$",
                          "typeString": "function (uint256,address,address) external returns (uint256,uint256,bool)"
                        }
                      },
                      "id": 31585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4606:62:82",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "tuple(uint256,uint256,bool)"
                      }
                    },
                    "src": "4571:97:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31587,
                  "nodeType": "ExpressionStatement",
                  "src": "4571:97:82"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 31594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31588,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31564,
                        "src": "4683:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 31589,
                        "name": "minAssetsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31559,
                        "src": "4692:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4683:21:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31591,
                        "name": "excessBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31566,
                        "src": "4708:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 31592,
                        "name": "minExcessOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31561,
                        "src": "4720:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4708:24:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4683:49:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31599,
                  "nodeType": "IfStatement",
                  "src": "4679:111:82",
                  "trueBody": {
                    "id": 31598,
                    "nodeType": "Block",
                    "src": "4734:56:82",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31595,
                            "name": "MinAssetsOrExcessError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31388,
                            "src": "4755:22:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 31596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4755:24:82",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31597,
                        "nodeType": "RevertStatement",
                        "src": "4748:31:82"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 31550,
              "nodeType": "StructuredDocumentation",
              "src": "3764:601:82",
              "text": "@notice Quick exit into the constituent assets with slippage protection\n @param vault ERC4626 vault.\n @param shares Number of shares to eject with.\n @param receiver Destination address for the constituent assets.\n @param minAssetsOut Minimum amount of assets returned\n @param minExcessOut Minimum excess PT/YT returned \n @return assets Amount of asset redeemable by the given number of shares.\n @return excessBal Amount of excess PT or YT redeemable by the given number of shares.\n @return isExcessPTs Whether the excess token is a YT or PT."
            },
            "functionSelector": "678424c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "eject",
            "nameLocation": "4379:5:82",
            "parameters": {
              "id": 31562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31553,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "4393:5:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31601,
                  "src": "4385:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC4626_$25660",
                    "typeString": "contract ERC4626"
                  },
                  "typeName": {
                    "id": 31552,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31551,
                      "name": "ERC4626",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25660,
                      "src": "4385:7:82"
                    },
                    "referencedDeclaration": 25660,
                    "src": "4385:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC4626_$25660",
                      "typeString": "contract ERC4626"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31555,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4408:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31601,
                  "src": "4400:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4400:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31557,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "4424:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31601,
                  "src": "4416:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4416:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31559,
                  "mutability": "mutable",
                  "name": "minAssetsOut",
                  "nameLocation": "4442:12:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31601,
                  "src": "4434:20:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4434:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31561,
                  "mutability": "mutable",
                  "name": "minExcessOut",
                  "nameLocation": "4464:12:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31601,
                  "src": "4456:20:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4456:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4384:93:82"
            },
            "returnParameters": {
              "id": 31569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31564,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "4512:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31601,
                  "src": "4504:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4504:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31566,
                  "mutability": "mutable",
                  "name": "excessBal",
                  "nameLocation": "4528:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31601,
                  "src": "4520:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31568,
                  "mutability": "mutable",
                  "name": "isExcessPTs",
                  "nameLocation": "4544:11:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31601,
                  "src": "4539:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 31567,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4539:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4503:53:82"
            },
            "scope": 31620,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31619,
            "nodeType": "FunctionDefinition",
            "src": "4802:119:82",
            "nodes": [],
            "body": {
              "id": 31618,
              "nodeType": "Block",
              "src": "4875:46:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31614,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31606,
                        "src": "4903:2:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31615,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31608,
                        "src": "4907:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31611,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31604,
                        "src": "4885:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$26855",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 31613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27617,
                      "src": "4885:17:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$26855_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$26855_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 31616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:29:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31617,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:29:82"
                }
              ]
            },
            "functionSelector": "e1f21c67",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4811:7:82",
            "parameters": {
              "id": 31609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31604,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4825:5:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31619,
                  "src": "4819:11:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$26855",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 31603,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31602,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26855,
                      "src": "4819:5:82"
                    },
                    "referencedDeclaration": 26855,
                    "src": "4819:5:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$26855",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31606,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4840:2:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31619,
                  "src": "4832:10:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4832:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31608,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4852:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 31619,
                  "src": "4844:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4844:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4818:41:82"
            },
            "returnParameters": {
              "id": 31610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4875:0:82"
            },
            "scope": 31620,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RollerPeriphery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31620
        ],
        "name": "RollerPeriphery",
        "nameLocation": "385:15:82",
        "scope": 31621,
        "usedErrors": [
          31376,
          31379,
          31382,
          31385,
          31388
        ]
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 82
}